{"version":3,"sources":["app/views/fleet/drivers/DriverManagement.jsx","../node_modules/react-bootstrap/esm/Table.js","../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js"],"names":["DriverManagement","useState","show","setShow","celldata","t","onHide","centered","Header","closeButton","Title","className","Body","Label","Control","placeholder","md","aria-label","aria-describedby","Item","map","item","style","width","variant","onClick","type","Table","React","ref","bsPrefix","striped","bordered","borderless","hover","size","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","alignDirection","PropTypes","oneOf","alignPropType","oneOfType","shape","sm","lg","xl","xxl","propTypes","id","string","href","func","title","node","isRequired","disabled","bool","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","DropdownButton","_jsxs","Dropdown","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName"],"mappings":"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","file":"static/js/98.38bd23c6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\n\r\nconst DriverManagement = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const celldata = [\r\n    t(\"employeeId\"),\r\n    t(\"fullName\"),\r\n    t(\"streetAddress\"),\r\n    t(\"city\"),\r\n    t(\"country\"),\r\n    t(\"postalCode\"),\r\n    t(\"warehouse\"),\r\n    t(\"designation\"),\r\n    t(\"idNumber\"),\r\n    t(\"contractId\"),\r\n    t(\"salary\"),\r\n    t(\"joiningDate\"),\r\n    t(\"contractExpiry\"),\r\n    t(\"employeeType\"),\r\n    t(\"vendor\"),\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col>\r\n          <h2>{t(\"staffManagement\")}</h2>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"text-center\">{t(\"addDriverVehicle\")}</Modal.Title>\r\n        </Modal.Header>\r\n        <Form>\r\n          <Modal.Body>\r\n            <Form.Label>{t(\"vehiclePlateNumber\")}</Form.Label>\r\n            <Form.Control placeholder=\"enter vehicle plate number\" />\r\n            <Form.Label>{t(\"vehicleModel\")}</Form.Label>\r\n            <Form.Control placeholder=\"enter vehicle model\" />\r\n            <Form.Label>{t(\"vehiclePlateYear\")}</Form.Label>\r\n            <Form.Control placeholder=\"enter vehicle make year\" />\r\n            <Form.Label>{t(\"cargoCapacity\")}</Form.Label>\r\n            <Form.Control placeholder=\"enter carago capacity in Kg\" />\r\n            <div className=\"mt-2 d-flex justify-content-center\">\r\n              <Button>{t(\"addVehicle\")}</Button>\r\n            </div>\r\n          </Modal.Body>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <Row className=\"mt-1 \">\r\n        <Form>\r\n          <Card>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Label>\r\n                    <h5>{t(\"selectWarehouse\")}</h5>\r\n                  </Form.Label>\r\n                  <InputGroup>\r\n                    <FormControl\r\n                      placeholder=\"--select warehouse--\"\r\n                      aria-label=\"Warehouse\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                    />\r\n                    <DropdownButton>\r\n                      <Dropdown.Item>Item1</Dropdown.Item>\r\n                      <Dropdown.Item>Item2</Dropdown.Item>\r\n                      <Dropdown.Item>Item3</Dropdown.Item>\r\n                    </DropdownButton>\r\n                  </InputGroup>\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                  <Form.Label>\r\n                    <h5>{t(\"selectDriver\")}</h5>\r\n                  </Form.Label>\r\n                  <InputGroup>\r\n                    <FormControl\r\n                      placeholder=\"--select driver--\"\r\n                      aria-label=\"Warehouse\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                    />\r\n                    <DropdownButton>\r\n                      <Dropdown.Item>Item1</Dropdown.Item>\r\n                      <Dropdown.Item>Item2</Dropdown.Item>\r\n                      <Dropdown.Item>Item3</Dropdown.Item>\r\n                    </DropdownButton>\r\n                  </InputGroup>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Form>\r\n      </Row>\r\n\r\n      <Row className=\"mt-2\">\r\n        <Col md={6}>\r\n          <Card>\r\n            <Card.Body>\r\n              <Table className=\"text-center\">\r\n                {celldata.map((item) => (\r\n                  <tr>\r\n                    <td\r\n                      className=\"bg-primary px-0 mx-0 text-white border\"\r\n                      style={{ width: \"20%\" }}\r\n                    >\r\n                      {item}\r\n                    </td>\r\n                    <td className=\"px-0 bg-light border\"></td>\r\n                  </tr>\r\n                ))}\r\n              </Table>\r\n              <div className=\"d-flex justify-content-end\">\r\n                <Button variant=\"primary\" onClick={handleShow}>\r\n                {t(\"addDriverAndVehicle\")}\r\n                </Button>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col md={6}>\r\n          <Row>\r\n            <Card>\r\n              <Card.Body>\r\n                <Form>\r\n                  <Card.Title>{t(\"generateCredentials\")}</Card.Title>\r\n                  <Form.Label>{t(\"username\")}</Form.Label>\r\n                  <Form.Control type=\"text\" />\r\n                  <Form.Label>{t(\"password\")}</Form.Label>\r\n                  <Form.Control type=\"password\" />\r\n                  <div className=\"d-flex justify-content-end mt-2\">\r\n                    <Button>{t(\"generate\")}</Button>\r\n                  </div>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Row>\r\n\r\n          <Row className=\"mt-2\">\r\n            <Card>\r\n              <Card.Body>\r\n                <Form>\r\n                  <Card.Title>{t(\"terminateUser\")}</Card.Title>\r\n                  <Form.Label>{t(\"terminationReason\")}</Form.Label>\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"--select termination members--\"\r\n                    />\r\n                    <DropdownButton></DropdownButton>\r\n                  </InputGroup>\r\n                  <Form.Label>{t(\"note\")}</Form.Label>\r\n                  <Form.Control type=\"text\" />\r\n                  <div className=\"d-flex justify-content-end mt-2\">\r\n                    <Button variant=\"danger\">{t(\"update\")}</Button>\r\n                  </div>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DriverManagement;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n})]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;"],"sourceRoot":""}