{"version":3,"sources":["app/views/app/invoice/InvoiceList.jsx","../node_modules/react-bootstrap/esm/Table.js","app/views/app/invoice/InvoiceService.js"],"names":["InvoiceList","state","invoiceList","shouldShowConfirmationDialog","handeViewClick","invoiceId","props","history","push","getInvoiceById","then","res","console","log","data","handleDeleteInvoice","invoice","deleteInvoice","swal","fire","title","text","type","icon","timer","setState","handleDialogClose","getAllInvoice","this","to","className","variant","elevation","style","minWidth","map","index","key","id","align","orderNo","seller","name","buyer","classList","status","onClick","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","value","Component","Table","React","ref","bsPrefix","striped","bordered","borderless","hover","size","responsive","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","axios","get","post","addInvoice","updateInvoice"],"mappings":"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","file":"static/js/107.748876ea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Table, Button, Card } from \"react-bootstrap\";\r\nimport { getAllInvoice, deleteInvoice , getInvoiceById} from \"./InvoiceService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { classList } from \"@utils\";\r\nimport swal from \"sweetalert2\";\r\n\r\nclass InvoiceList extends Component {\r\n  state = {\r\n    invoiceList: [],\r\n    shouldShowConfirmationDialog: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    getAllInvoice().then((res) => this.setState({ invoiceList: res.data }));\r\n  }\r\n\r\n  handeViewClick = (invoiceId) => {\r\n    this.props.history.push(`/invoice/${invoiceId}`);\r\n    getInvoiceById(invoiceId).then((res) => console.log(res.data));\r\n  };\r\n\r\n  handleDeleteInvoice = (invoice) => {\r\n    deleteInvoice(invoice).then((res) => {\r\n      swal.fire({\r\n        title: \"Deleted!\",\r\n        text: \"Your file has been deleted.\",\r\n        type: \"success\",\r\n        icon: \"success\",\r\n        timer: 1500,\r\n      });\r\n\r\n      this.setState({\r\n        invoiceList: res.data,\r\n        shouldShowConfirmationDialog: false,\r\n      });\r\n    });\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({ shouldShowConfirmationDialog: false });\r\n  };\r\n\r\n  render() {\r\n    let { invoiceList } = this.state;\r\n    return (\r\n      <div>\r\n        {/* <h2 className=\"fw-bold\">Active Trips</h2> */}\r\n        <Link to=\"/invoice/create\">\r\n          <Button className=\"mb-3\" variant=\"primary\">\r\n            Add Invoice\r\n          </Button>\r\n        </Link>\r\n        <Card elevation={6} className=\"w-100 overflow-auto\">\r\n          <Table style={{ minWidth: 750 }}>\r\n            <tbody>\r\n              {invoiceList.map((invoice, index) => (\r\n                <tr key={invoice.id}>\r\n                  <td className=\"pl-sm-24 capitalize\" align=\"left\">\r\n                    {invoice.orderNo}\r\n                  </td>\r\n                  <td className=\"pl-0 capitalize\" align=\"left\">\r\n                    {invoice.seller.name}\r\n                  </td>\r\n                  <td className=\"pl-0 capitalize\" align=\"left\">\r\n                    {invoice.buyer.name}\r\n                  </td>\r\n                  <td className=\"pl-0 capitalize\">\r\n                    <small\r\n                      className={classList({\r\n                        \"badge rounded-pill text-white px-8 py-2\": true,\r\n                        \"bg-success\": invoice.status === \"delivered\",\r\n                        \"bg-warning\": invoice.status === \"processing\",\r\n                        \"bg-danger\": invoice.status === \"pending\",\r\n                      })}\r\n                    >\r\n                      {invoice.status}\r\n                    </small>\r\n                  </td>\r\n                  <td className=\"pl-0\">\r\n                    <i\r\n                      className=\"i-Arrow-Right mr-4 font-weight-900 text-primary cursor-pointer\"\r\n                      onClick={() => this.handeViewClick(invoice.id)}\r\n                    ></i>\r\n                    <i\r\n                      className=\"i-Folder-Trash font-weight-900 text-danger cursor-pointer\"\r\n                      onClick={() => {\r\n                        swal\r\n                          .fire({\r\n                            title: \"Are you sure?\",\r\n                            text: \"You won't be able to revert this!\",\r\n                            icon: \"warning\",\r\n                            type: \"question\",\r\n                            showCancelButton: true,\r\n                            confirmButtonColor: \"#3085d6\",\r\n                            cancelButtonColor: \"#d33\",\r\n                            confirmButtonText: \"Yes, delete it!\",\r\n                            cancelButtonText: \"No\",\r\n                          })\r\n                          .then((result) => {\r\n                            if (result.value) {\r\n                              this.handleDeleteInvoice(invoice);\r\n                            }\r\n                          });\r\n                      }}\r\n                    ></i>\r\n                  </td>\r\n                  <td>Sample text</td>\r\n                </tr>\r\n              ))}{\" \"}\r\n            </tbody>\r\n          </Table>\r\n        </Card>\r\n        {/* <ConfirmationDialog\r\n          open={this.state.shouldShowConfirmationDialog}\r\n          onConfirmDialogClose={this.handleDialogClose}\r\n          onYesClick={this.handleDeleteInvoice}\r\n          text=\"Are you sure to delete?\"\r\n        /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InvoiceList;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import axios from 'axios';\r\n\r\nexport const getAllInvoice = () => {\r\n    return axios.get(\"/api/invoices/all\")\r\n}\r\nexport const getInvoiceById = (id) => {\r\n    return axios.get(\"/api/invoices\", { data: id })\r\n}\r\nexport const deleteInvoice = (invoice) => {\r\n    return axios.post(\"/api/invoices/delete\", invoice)\r\n}\r\nexport const addInvoice = (invoice) => {\r\n    return axios.post(\"/api/invoices/add\", invoice)\r\n}\r\nexport const updateInvoice = (invoice) => {\r\n    return axios.post(\"/api/invoices/update\", invoice)\r\n}"],"sourceRoot":""}