{"version":3,"sources":["app/views/Locations/lastMileLocation/EditForm.jsx","app/views/User/UserComponents/DataFetcher.jsx","app/views/User/UserComponents/GetCity.jsx","app/views/User/UserComponents/GetCountry.jsx"],"names":["EditFormHub","contactUpdateDto","countryCode","id","networkCode","number","numberType","addressUpdateDto","_long","geoLink","lang","streetAddress","handleClickAddress","e","console","log","axios","put","headers","SessionKey","then","res","catch","err","handleClickContact","Getid","props","location","Get_city_id","cityId","parseInt","this","resource","address","contact","forceUpdate","history","pushState","pathname","t","className","Body","md","Label","name","placeholder","aria-label","aria-describedby","onChange","target","value","variant","onClick","Data","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Component","DataFetcher","useEffect","a","get","url","Event","event","idsetter","data","status","Error","fetch","GetCity","City","CitiesGetter","returnid","required","selected","map","n","GetCountry","Country","CountriesGetter","country"],"mappings":"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","file":"static/js/90.2369d9a7.chunk.js","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\nimport axios from \"axios\";\r\nimport history from \"@history\";\r\nimport GetCountry from \"app/views/User/UserComponents/GetCountry\";\r\nimport GetCity from \"app/views/User/UserComponents/GetCity\";\r\nexport default class EditFormHub extends Component {\r\n  contactUpdateDto = {\r\n    countryCode: \"\",\r\n    id: null,\r\n    networkCode: null,\r\n    number: null,\r\n    numberType: \"\",\r\n  };\r\n  addressUpdateDto = {\r\n    _long: null,\r\n    geoLink: \"\",\r\n    id: null,\r\n    lang: null,\r\n    streetAddress: \"\",\r\n  };\r\n  handleClickAddress = (e) => {\r\n    console.log(this.addressUpdateDto);\r\n    axios\r\n      .put(\"http://15.235.141.168:70/address/update\", this.addressUpdateDto, {\r\n        headers: { SessionKey: \"123\" },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n  handleClickContact = (e) => {\r\n    console.log(this.contactUpdateDto);\r\n    axios\r\n      .put(\"http://15.235.141.168:70/contact/update\", this.contactUpdateDto, {\r\n        headers: { SessionKey: \"123\" },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    this.addressUpdateDto = this.props.location.resource.location.address;\r\n    this.contactUpdateDto = this.props.location.resource.location.contact;\r\n    console.log(this.addressUpdateDto, this.contactUpdateDto);\r\n    this.forceUpdate();\r\n  }\r\n  Getid = () => {\r\n    return this.props.location.id;\r\n  };\r\n  componentWillUnmount() {\r\n    history.pushState({\r\n      pathname: \"/ViewlastMileLocation\",\r\n    });\r\n  }\r\n  Get_city_id = (props) => {\r\n    this.addressUpdateDto.cityId = parseInt(props, 10);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col>\r\n            <h2>\r\n              {t(\"Edit Customer Warehouse\")} / {t(\"Edit\")}{\" \"}\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-1\">\r\n          <Form>\r\n            <Card>\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Country Code\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      name=\"countryCode\"\r\n                      placeholder={t(\"Country Code\")}\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.contactUpdateDto.countryCode = e.target.value;\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Network Code\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      name=\"networkCode\"\r\n                      placeholder={t(\"Network Code\")}\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.contactUpdateDto.networkCode = parseInt(\r\n                          e.target.value,\r\n                          10\r\n                        );\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Number\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      name=\"number\"\r\n                      placeholder={t(\"Number\")}\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.contactUpdateDto.number = parseInt(\r\n                          e.target.value,\r\n                          10\r\n                        );\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Number Type\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      name=\"numberType\"\r\n                      placeholder={t(\"Number Type\")}\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.contactUpdateDto.numberType = e.target.value;\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Row className=\"mt-2\">\r\n                    <Col className=\"d-flex justify-content-end align-items-center\">\r\n                      <Button\r\n                        className=\"mx-2\"\r\n                        variant=\"success\"\r\n                        onClick={this.handleClickContact}\r\n                      >\r\n                        {t(\"Update\")}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <GetCountry />\r\n\r\n                  <GetCity Data={this.Get_city_id} />\r\n\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Street Address\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      name=\"streetAdress\"\r\n                      placeholder={t(\"Street Address\")}\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.addressUpdateDto.streetAddress = e.target.value;\r\n                      }}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"addLocation\")} </h5>\r\n                    </Form.Label>\r\n                    <InputGroup>\r\n                      <FormControl\r\n                        placeholder={t(\"Add Location\")}\r\n                        aria-label=\"Enddate\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        name=\"AddLocation\"\r\n                      />\r\n                      <Button\r\n                        onClick={(e) => {\r\n                          navigator.geolocation.getCurrentPosition(\r\n                            (position) => {\r\n                              console.log(\r\n                                \"Latitude : \",\r\n                                position.coords.latitude\r\n                              );\r\n                              console.log(\r\n                                \"Longitude : \",\r\n                                position.coords.longitude\r\n                              );\r\n                              this.addressUpdateDto.lang =\r\n                                position.coords.latitude;\r\n                              this.addressUpdateDto._long =\r\n                                position.coords.longitude;\r\n                            }\r\n                          );\r\n                        }}\r\n                      >\r\n                        {t(\"addLocation\")}{\" \"}\r\n                      </Button>\r\n                    </InputGroup>\r\n                  </Col>\r\n\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Geo Link\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      placeholder={t(\"Geo Link\")}\r\n                      aria-label=\"Enddate\"\r\n                      name=\"GeoLink\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.addressUpdateDto.geoLink = e.target.value;\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Row className=\"mt-2\">\r\n                    <Col className=\"d-flex justify-content-end align-items-center\">\r\n                      <Button\r\n                        className=\"mx-2\"\r\n                        variant=\"success\"\r\n                        onClick={this.handleClickAddress}\r\n                      >\r\n                        {t(\"Update\")}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Form>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst DataFetcher = (props) => {\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      await axios\r\n        .get(props.url, {\r\n          headers: {\r\n            SessionKey: \"123\",\r\n            Event: props.event,\r\n            id: props.idsetter,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          props.Data(res.data.data);\r\n          if (res.status === 200) {\r\n            return res;\r\n          } else {\r\n            throw new Error(res);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          throw err;\r\n        });\r\n    };\r\n    fetch();\r\n  }, []);\r\n\r\n  return null;\r\n};\r\nexport default DataFetcher;\r\n","import React, { Component } from \"react\";\r\nimport DataFetcher from \"./DataFetcher\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\nexport default class GetCity extends Component {\r\n  City = [];\r\n\r\n  CitiesGetter = (props) => {\r\n    console.log(props);\r\n    this.City = props;\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Col md={6} className=\"mt-2\">\r\n        <DataFetcher\r\n          Data={this.CitiesGetter}\r\n          url={\"http://15.235.141.168:70/util/get-city\"}\r\n        />\r\n        <Form.Label>\r\n          <h5>{t(\"City\")} </h5>\r\n        </Form.Label>\r\n\r\n        <InputGroup>\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            onChange={(e) => {\r\n              const returnid = e.target.value;\r\n              this.props.Data(returnid);\r\n              console.log(this.City);\r\n            }}\r\n            required\r\n          >\r\n            <option selected>{t(\"City\")}</option>\r\n\r\n            {this.City.map((n) => {\r\n              return <option value={n.id}>{n.name}</option>;\r\n            })}\r\n          </select>\r\n        </InputGroup>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DataFetcher from \"./DataFetcher\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\nexport default class GetCountry extends Component {\r\n  Country = [];\r\n\r\n  CountriesGetter = (props) => {\r\n    console.log(props);\r\n    this.Country = props;\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Col md={6} className=\"mt-2\">\r\n        <DataFetcher\r\n          Data={this.CountriesGetter}\r\n          url={\"http://15.235.141.168:70/util/get-country\"}\r\n        />\r\n        <Form.Label>\r\n          <h5>{t(\"Country\")} </h5>\r\n        </Form.Label>\r\n\r\n        <InputGroup>\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            onChange={(e) => {\r\n              const returnid = e.target.value;\r\n              this.props.Data(returnid);\r\n              console.log(this.Country);\r\n            }}\r\n            required\r\n          >\r\n            <option selected>{t(\"Country\")}</option>\r\n\r\n            {this.Country.map((n) => {\r\n              return <option value={n.id}>{n.country}</option>;\r\n            })}\r\n          </select>\r\n        </InputGroup>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}