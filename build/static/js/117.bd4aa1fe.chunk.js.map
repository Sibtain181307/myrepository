{"version":3,"sources":["app/views/shipment/shipment-views/ShipmentReport.jsx","../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js"],"names":["ShipmentReport","t","className","size","Body","md","Label","placeholder","aria-label","aria-describedby","Item","alignDirection","PropTypes","oneOf","alignPropType","oneOfType","shape","sm","lg","xl","xxl","propTypes","id","string","href","onClick","func","title","node","isRequired","disabled","bool","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","bsPrefix","variant","DropdownButton","React","ref","children","props","_jsxs","Dropdown","_jsx","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName"],"mappings":"mHAAA,sHAgFeA,UAjEQ,WACrB,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,4BAAKC,YAAE,oBAET,kBAAC,IAAD,CAAKC,UAAU,gCACb,kBAAC,IAAD,CAAQC,KAAK,MAAMF,YAAE,OAGzB,kBAAC,IAAD,CAAKC,UAAU,QACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAKE,KAAN,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,GACP,kBAAC,IAAKC,MAAN,KAAaL,YAAE,cACf,kBAAC,IAAD,CACEM,YAAY,wBACZC,aAAW,YACXC,mBAAiB,kBAGrB,kBAAC,IAAD,CAAKJ,GAAI,GACP,kBAAC,IAAKC,MAAN,KAAaL,YAAE,YAEf,kBAAC,IAAD,CACEM,YAAY,sBACZC,aAAW,UACXC,mBAAiB,mBAKvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKJ,GAAI,EAAGH,UAAU,QACpB,kBAAC,IAAKI,MAAN,KACE,4BACGL,YAAE,WADL,IACkB,KACfA,YAAE,YAFL,IAEmB,MAGrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEM,YAAY,uBACZC,aAAW,UACXC,mBAAiB,iBAEnB,kBAAC,IAAD,KACE,kBAAC,IAASC,KAAV,cACA,kBAAC,IAASA,KAAV,cACA,kBAAC,IAASA,KAAV,yB,iCCnEtB,uDACMC,EAAiBC,IAAUC,MAAM,CAAC,QAAS,QACpCC,EAAgBF,IAAUG,UAAU,CAACJ,EAAgBC,IAAUI,MAAM,CAChFC,GAAIN,IACFC,IAAUI,MAAM,CAClBX,GAAIM,IACFC,IAAUI,MAAM,CAClBE,GAAIP,IACFC,IAAUI,MAAM,CAClBG,GAAIR,IACFC,IAAUI,MAAM,CAClBI,IAAKT,O,+PCHDU,EAAY,CAKhBC,GAAIV,IAAUW,OAGdC,KAAMZ,IAAUW,OAGhBE,QAASb,IAAUc,KAGnBC,MAAOf,IAAUgB,KAAKC,WAGtBC,SAAUlB,IAAUmB,KASpBC,MAAOlB,IAGPmB,SAAUrB,IAAUW,OAGpBW,kBAAmBtB,IAAUmB,KAO7BI,eAAgBvB,IAAUW,OAO1Ba,YAAaxB,IAAUC,MAAM,CAAC,SAG9BwB,SAAUzB,IAAUW,OAGpBe,QAAS1B,IAAUW,OAGnBpB,KAAMS,IAAUW,QAYZgB,EAA8BC,cAAiB,WAclDC,GAdkD,IACnDd,EADmD,EACnDA,MACAe,EAFmD,EAEnDA,SACAL,EAHmD,EAGnDA,SACAF,EAJmD,EAInDA,eACAG,EALmD,EAKnDA,QACAnC,EANmD,EAMnDA,KACA8B,EAPmD,EAOnDA,SACAC,EARmD,EAQnDA,kBACAJ,EATmD,EASnDA,SACAN,EAVmD,EAUnDA,KACAF,EAXmD,EAWnDA,GACAc,EAZmD,EAYnDA,YACGO,EAbgD,wBAc7BC,eAAMC,IAAD,YAAC,aAC5BJ,IAAKA,GACFE,GAFwB,IAG3BD,SAAU,CAAcI,cAAKC,IAAgB,CAC3CzB,GAAIA,EACJE,KAAMA,EACNrB,KAAMA,EACNmC,QAASA,EACTR,SAAUA,EACVkB,cAAeX,EACfK,SAAUf,IACKmB,cAAKG,IAAc,CAClCC,KAAMjB,EACNkB,cAAejB,EACfC,eAAgBA,EAChBG,QAASF,EACTM,SAAUA,WAGdH,EAAea,YAAc,iBAC7Bb,EAAelB,UAAYA,EACZkB","file":"static/js/117.bd4aa1fe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\n\r\nconst ShipmentReport = () => {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col>\r\n          <h2>{t(\"shipmentReport\")}</h2>\r\n        </Col>\r\n        <Col className=\"d-flex flex-row-reverse mx-5\">\r\n          <Button size=\"lg\">{t(\"\")}</Button>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-1\">\r\n        <Form>\r\n          <Card>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Label>{t(\"startDate\")}</Form.Label>\r\n                  <FormControl\r\n                    placeholder=\"--select start date--\"\r\n                    aria-label=\"Startdate\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                  />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Form.Label>{t(\"endDate\")}</Form.Label>\r\n\r\n                  <FormControl\r\n                    placeholder=\"--select end date--\"\r\n                    aria-label=\"enddate\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={6} className=\"mt-2\">\r\n                  <Form.Label>\r\n                    <h5>\r\n                      {t(\"shipper\")} {\"[ \"}\r\n                      {t(\"optional\")} {\"]\"}\r\n                    </h5>\r\n                  </Form.Label>\r\n                  <InputGroup>\r\n                    <FormControl\r\n                      placeholder=\"--select a shipper--\"\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                    />\r\n                    <DropdownButton>\r\n                      <Dropdown.Item>Item1</Dropdown.Item>\r\n                      <Dropdown.Item>Item2</Dropdown.Item>\r\n                      <Dropdown.Item>Item3</Dropdown.Item>\r\n                    </DropdownButton>\r\n                  </InputGroup>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Form>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShipmentReport;\r\n","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n})]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;"],"sourceRoot":""}