{"version":3,"sources":["app/views/Locations/Customer-Warehouse/AddCustomerWareHouse.jsx","app/views/User/UserComponents/DataFetcher.jsx","app/views/User/UserComponents/GetCity.jsx","app/views/User/UserComponents/GetCountry.jsx","app/views/User/UserComponents/Address.jsx","app/views/User/UserComponents/Contact.jsx"],"names":["AddCustomerWareHouse","locationDataDTO","custWarehouseDto","validityDate","bizCustId","warehouse","address","_long","cityId","geoLink","lang","streetAddress","addressId","contact","countryCode","networkCode","number","numberType","contactId","statusId","title","type","isAddressById","isContactById","handleClick","e","console","log","axios","post","headers","SessionKey","Event","then","res","status","data","Error","this","catch","err","GetContact","props","GetAddress","t","className","Body","Data","md","Label","placeholder","aria-label","aria-describedby","onChange","parseInt","target","value","variant","onClick","Component","DataFetcher","useEffect","a","get","url","event","id","idsetter","fetch","GetCity","City","CitiesGetter","forceUpdate","returnid","required","selected","map","n","name","GetCountry","Country","CountriesGetter","country","Address","Get_city_id","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Contact"],"mappings":"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","file":"static/js/72.670547e3.chunk.js","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\nimport axios from \"axios\";\r\nimport Address from \"app/views/User/UserComponents/Address\";\r\nimport Contact from \"app/views/User/UserComponents/Contact\";\r\nexport default class AddCustomerWareHouse extends Component {\r\n  locationDataDTO = {\r\n    custWarehouseDto: {\r\n      validityDate: \"2202-04-03\",\r\n      bizCustId: 1,\r\n      warehouse: {\r\n        address: {\r\n          _long: null,\r\n          cityId: null,\r\n          geoLink: \"\",\r\n          lang: null,\r\n          streetAddress: \"\",\r\n        },\r\n        addressId: 0,\r\n        contact: {\r\n          countryCode: \"\",\r\n          networkCode: null,\r\n          number: null,\r\n          numberType: \"\",\r\n        },\r\n        contactId: 0,\r\n        statusId: null,\r\n        title: \"\",\r\n        type: \"\",\r\n        isAddressById: false,\r\n        isContactById: false,\r\n      },\r\n    },\r\n  };\r\n  handleClick = (e) => {\r\n    console.log(this.locationDataDTO);\r\n    axios\r\n      .post(\"http://15.235.141.168:70/location/add\", this.locationDataDTO, {\r\n        headers: { SessionKey: \"123\", Event: \"Create-Biz-Cust-Warehouse\" },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          return res.data.data;\r\n        } else {\r\n          throw new Error(res.this.locationDataDTO);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n  GetContact = (props) => {\r\n    console.log(props);\r\n    this.locationDataDTO.custWarehouseDto.warehouse.contact = props;\r\n  };\r\n\r\n  GetAddress = (props) => {\r\n    console.log(props);\r\n    this.locationDataDTO.custWarehouseDto.warehouse.address = props;\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col>\r\n            <h2>\r\n              {t(\"viewCustomerWareHouses\")} / {t(\"addCustomerWareHouse\")}{\" \"}\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-1\">\r\n          <Form>\r\n            <Card>\r\n              <Card.Body>\r\n                <Row>\r\n                  <Contact Data={this.GetContact} />\r\n                  <Address Data={this.GetAddress} />\r\n\r\n                  <Row>\r\n                    <Col md={6} className=\"mt-2\">\r\n                      <Form.Label>\r\n                        <h5>{t(\"Business Customer ID\")} </h5>\r\n                      </Form.Label>\r\n\r\n                      <FormControl\r\n                        placeholder={t(\"Business Customer ID\")}\r\n                        aria-label=\"Enddate\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onChange={(e) => {\r\n                          this.locationDataDTO.custWarehouseDto.bizCustId =\r\n                            parseInt(e.target.value, 10);\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                    <Col md={6} className=\"mt-2\">\r\n                      <Form.Label>\r\n                        <h5>{t(\"Status Id\")} </h5>\r\n                      </Form.Label>\r\n\r\n                      <FormControl\r\n                        placeholder={t(\"Status Id\")}\r\n                        aria-label=\"Enddate\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onChange={(e) => {\r\n                          this.locationDataDTO.custWarehouseDto.warehouse.statusId =\r\n                            parseInt(e.target.value, 10);\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                    <Col md={6} className=\"mt-2\">\r\n                      <Form.Label>\r\n                        <h5>{t(\"Validity Date\")} </h5>\r\n                      </Form.Label>\r\n\r\n                      <FormControl\r\n                        placeholder=\"yyyy-mm-dd\"\r\n                        aria-label=\"Enddate\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onChange={(e) => {\r\n                          this.locationDataDTO.custWarehouseDto.validityDate =\r\n                            e.target.value;\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                    <Col md={6} className=\"mt-2\">\r\n                      <Form.Label>\r\n                        <h5>{t(\"Title\")} </h5>\r\n                      </Form.Label>\r\n\r\n                      <FormControl\r\n                        placeholder={t(\"Title\")}\r\n                        aria-label=\"Enddate\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onChange={(e) => {\r\n                          this.locationDataDTO.custWarehouseDto.warehouse.title =\r\n                            e.target.value;\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                    <Col md={6} className=\"mt-2\">\r\n                      <Form.Label>\r\n                        <h5>{t(\"Type\")} </h5>\r\n                      </Form.Label>\r\n\r\n                      <FormControl\r\n                        placeholder=\"Type\"\r\n                        aria-label=\"Enddate\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onChange={(e) => {\r\n                          this.locationDataDTO.custWarehouseDto.warehouse.type =\r\n                            e.target.value;\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mt-2\">\r\n                    <Col className=\"d-flex justify-content-end align-items-center\">\r\n                      <Button\r\n                        className=\"mx-2\"\r\n                        variant=\"success\"\r\n                        onClick={this.handleClick}\r\n                      >\r\n                        {t(\"create\")}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Form>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst DataFetcher = (props) => {\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      await axios\r\n        .get(props.url, {\r\n          headers: {\r\n            SessionKey: \"123\",\r\n            Event: props.event,\r\n            id: props.idsetter,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          props.Data(res.data.data);\r\n          if (res.status === 200) {\r\n            return res;\r\n          } else {\r\n            throw new Error(res);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          throw err;\r\n        });\r\n    };\r\n    fetch();\r\n  }, []);\r\n\r\n  return null;\r\n};\r\nexport default DataFetcher;\r\n","import React, { Component } from \"react\";\r\nimport DataFetcher from \"./DataFetcher\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\nexport default class GetCity extends Component {\r\n  City = [];\r\n\r\n  CitiesGetter = (props) => {\r\n    console.log(props);\r\n    this.City = props;\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Col md={6} className=\"mt-2\">\r\n        <DataFetcher\r\n          Data={this.CitiesGetter}\r\n          url={\"http://15.235.141.168:70/util/get-city\"}\r\n        />\r\n        <Form.Label>\r\n          <h5>{t(\"City\")} </h5>\r\n        </Form.Label>\r\n\r\n        <InputGroup>\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            onChange={(e) => {\r\n              const returnid = e.target.value;\r\n              this.props.Data(returnid);\r\n              console.log(this.City);\r\n            }}\r\n            required\r\n          >\r\n            <option selected>{t(\"City\")}</option>\r\n\r\n            {this.City.map((n) => {\r\n              return <option value={n.id}>{n.name}</option>;\r\n            })}\r\n          </select>\r\n        </InputGroup>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DataFetcher from \"./DataFetcher\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\nexport default class GetCountry extends Component {\r\n  Country = [];\r\n\r\n  CountriesGetter = (props) => {\r\n    console.log(props);\r\n    this.Country = props;\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Col md={6} className=\"mt-2\">\r\n        <DataFetcher\r\n          Data={this.CountriesGetter}\r\n          url={\"http://15.235.141.168:70/util/get-country\"}\r\n        />\r\n        <Form.Label>\r\n          <h5>{t(\"Country\")} </h5>\r\n        </Form.Label>\r\n\r\n        <InputGroup>\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            onChange={(e) => {\r\n              const returnid = e.target.value;\r\n              this.props.Data(returnid);\r\n              console.log(this.Country);\r\n            }}\r\n            required\r\n          >\r\n            <option selected>{t(\"Country\")}</option>\r\n\r\n            {this.Country.map((n) => {\r\n              return <option value={n.id}>{n.country}</option>;\r\n            })}\r\n          </select>\r\n        </InputGroup>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { default as t } from \"../../../../translations\";\r\nimport axios from \"axios\";\r\nimport GetCountry from \"../UserComponents/GetCountry\";\r\nimport GetCity from \"../UserComponents/GetCity\";\r\nexport default class Address extends Component {\r\n  address = {\r\n    _long: 0,\r\n    cityId: 0,\r\n    streetAddress: \"\",\r\n    lang: 0,\r\n    geoLink: \"\",\r\n  };\r\n  Get_city_id = (props) => {\r\n    this.address.cityId = parseInt(props, 10);\r\n    this.props.Data(this.address);\r\n  };\r\n  GetCountry = (props) => {};\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <GetCountry Data={this.GetCountry} />\r\n\r\n        <GetCity Data={this.Get_city_id} />\r\n\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"Street Address\")} </h5>\r\n          </Form.Label>\r\n\r\n          <FormControl\r\n            name=\"streetAdress\"\r\n            placeholder={t(\"Street Address\")}\r\n            aria-label=\"Enddate\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(e) => {\r\n              this.address.streetAddress = e.target.value;\r\n              this.props.Data(this.address);\r\n            }}\r\n            required\r\n          />\r\n        </Col>\r\n\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"addLocation\")} </h5>\r\n          </Form.Label>\r\n          <InputGroup>\r\n            <FormControl\r\n              placeholder={t(\"Location\")}\r\n              aria-label=\"Enddate\"\r\n              aria-describedby=\"basic-addon1\"\r\n              name=\"AddLocation\"\r\n            />\r\n            <Button\r\n              onClick={(e) => {\r\n                navigator.geolocation.getCurrentPosition((position) => {\r\n                  console.log(\"Latitude : \", position.coords.latitude);\r\n                  console.log(\"Longitude : \", position.coords.longitude);\r\n                  this.address.lang = position.coords.latitude;\r\n                  this.address._long = position.coords.longitude;\r\n                  this.props.Data(this.address);\r\n                });\r\n              }}\r\n            >\r\n              {t(\"addLocation\")}{\" \"}\r\n            </Button>\r\n          </InputGroup>\r\n        </Col>\r\n\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"Geo Link\")} </h5>\r\n          </Form.Label>\r\n\r\n          <FormControl\r\n            placeholder={t(\"Geo Link\")}\r\n            aria-label=\"Enddate\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(e) => {\r\n              this.address.geoLink = e.target.value;\r\n              this.props.Data(this.address);\r\n            }}\r\n            required\r\n          />\r\n        </Col>\r\n\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"Postal Code\")} </h5>\r\n          </Form.Label>\r\n\r\n          <FormControl\r\n            placeholder={t(\"Postal Code\")}\r\n            aria-label=\"Enddate\"\r\n            required\r\n            name=\"PostalCode\"\r\n            aria-describedby=\"basic-addon1\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { default as t } from \"../../../../translations\";\r\nexport default class Contact extends Component {\r\n  contact = {\r\n    countryCode: \"\",\r\n    networkCode: 0,\r\n    number: 0,\r\n    numberType: \"\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"Country Code\")} </h5>\r\n          </Form.Label>\r\n\r\n          <FormControl\r\n            placeholder={t(\"Country Code\")}\r\n            aria-label=\"Enddate\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(e) => {\r\n              this.contact.countryCode = e.target.value;\r\n              this.props.Data(this.contact);\r\n            }}\r\n            required\r\n          />\r\n        </Col>\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"Network Code\")} </h5>\r\n          </Form.Label>\r\n\r\n          <FormControl\r\n            placeholder={t(\"Network Code\")}\r\n            aria-label=\"Enddate\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(e) => {\r\n              this.contact.networkCode = parseInt(e.target.value, 10);\r\n              this.props.Data(this.contact);\r\n            }}\r\n            required\r\n          />\r\n        </Col>\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"Number\")} </h5>\r\n          </Form.Label>\r\n\r\n          <FormControl\r\n            placeholder={t(\"Number\")}\r\n            aria-label=\"Enddate\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(e) => {\r\n              this.contact.number = parseInt(e.target.value, 10);\r\n              this.props.Data(this.contact);\r\n            }}\r\n            required\r\n          />\r\n        </Col>\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"Number Type\")} </h5>\r\n          </Form.Label>\r\n\r\n          <FormControl\r\n            placeholder={t(\"Number Type\")}\r\n            aria-label=\"Enddate\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(e) => {\r\n              this.contact.numberType = e.target.value;\r\n              this.props.Data(this.contact);\r\n            }}\r\n            required\r\n          />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}