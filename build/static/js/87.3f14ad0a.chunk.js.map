{"version":3,"sources":["app/views/Locations/Hub-management/Asset_Management.jsx","../node_modules/react-bootstrap/esm/Table.js","../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js"],"names":["ViewAssetManagements","t","className","to","size","Body","md","Label","placeholder","aria-label","aria-describedby","Item","elevation","style","minWidth","variant","Table","React","ref","bsPrefix","striped","bordered","borderless","hover","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","alignDirection","PropTypes","oneOf","alignPropType","oneOfType","shape","sm","lg","xl","xxl","propTypes","id","string","href","onClick","func","title","node","isRequired","disabled","bool","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","DropdownButton","_jsxs","Dropdown","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName"],"mappings":"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","file":"static/js/87.3f14ad0a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\nimport { default as t } from \"../../../../translations\";\r\n\r\nconst ViewAssetManagements = () => {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col>\r\n          <h2>{t(\"ViewAssetManagement\")}</h2>\r\n        </Col>\r\n        <Col className=\"d-flex flex-row-reverse mx-5\">\r\n          <Link to=\"/AddAssets\">\r\n            <Button size=\"lg\">\r\n              <i className=\"i-Add\"></i> {t(\"Add Assets\")}\r\n            </Button>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-1\">\r\n        <Form>\r\n          <Card>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Label>\r\n                    <h5>{t(\"hub\")}</h5>\r\n                  </Form.Label>\r\n                  <InputGroup>\r\n                    <FormControl\r\n                      placeholder=\"--select hub--\"\r\n                      aria-label=\"hub\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                    />\r\n                    <DropdownButton>\r\n                      <Dropdown.Item>Item1</Dropdown.Item>\r\n                      <Dropdown.Item>Item2</Dropdown.Item>\r\n                      <Dropdown.Item>Item3</Dropdown.Item>\r\n                    </DropdownButton>\r\n                  </InputGroup>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Form>\r\n      </Row>\r\n      <Card elevation={6} className=\"w-100 overflow-auto mt-4\">\r\n        <Table style={{ minWidth: 750 }}>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"pl-sm-24\">{t(\"id\")}</th>\r\n              <th className=\"pl-sm-24\">{t(\"city\")}</th>\r\n              <th className=\"px-0\">{t(\"shelfShipments\")}</th>\r\n              <th className=\"px-0\">{t(\"floorShipments\")}</th>\r\n              <th className=\"px-0\">{t(\"codCollection\")}</th>\r\n              <th className=\"px-0\">{t(\"address\")}</th>\r\n              <th className=\"px-0\">{t(\"action\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td>\r\n              <Link to=\"/hub/edithub\">\r\n                <Button variant=\"success\">\r\n                  <i className=\"i-Pen-2\"></i>\r\n                </Button>{\" \"}\r\n              </Link>\r\n              <Button variant=\"danger\">\r\n                <i className=\"i-Remove\"></i>\r\n              </Button>\r\n            </td>\r\n          </tbody>\r\n        </Table>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewAssetManagements;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n})]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;"],"sourceRoot":""}