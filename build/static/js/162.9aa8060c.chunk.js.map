{"version":3,"sources":["app/views/sessions/Signin.jsx"],"names":["Signin","state","email","password","handleChange","event","persist","setState","target","name","value","console","log","handleSubmit","isSubmitting","props","loginWithEmailAndPassword","className","style","backgroundImage","src","alt","t","initialValues","this","onSubmit","values","errors","touched","handleBlur","htmlFor","type","onChange","onBlur","to","onClick","backgroundSize","Component","connect","PropTypes","func","isRequired","user"],"mappings":"8QAYMA,E,4MACJC,MAAQ,CACNC,MAAO,qBACPC,SAAU,Y,EAEZC,aAAe,SAACC,GACdA,EAAMC,UACN,EAAKC,SAAL,eAAiBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,QAClDC,QAAQC,IAAI,wBACZD,QAAQC,IAAI,EAAKX,Q,EAGnBY,aAAe,SAACH,EAAD,GAA6B,EAAnBI,aACvB,EAAKC,MAAMC,0BAA0BN,GACrCC,QAAQC,IAAI,yB,4CAGd,WAAU,IAAD,OACP,OACE,yBACEK,UAAU,mBACVC,MAAO,CACLC,gBAAiB,sCAGnB,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,yBAAKG,IAAI,gCAAgCC,IAAI,UAE/C,wBAAIJ,UAAU,2BAA2BK,YAAE,WAC3C,kBAAC,IAAD,CACEC,cAAeC,KAAKvB,MACpBwB,SAAUD,KAAKX,eAEd,gBACCa,EADD,EACCA,OACAC,EAFD,EAECA,OAEAvB,GAJD,EAGCwB,QAHD,EAICxB,cACAyB,EALD,EAKCA,WACAhB,EAND,EAMCA,aAND,EAOCC,aAPD,OASC,0BAAMW,SAAU,EAAKZ,cACnB,yBAAKI,UAAU,cACb,2BAAOa,QAAQ,SAASR,YAAE,UAC1B,2BACEL,UAAU,sDACVc,KAAK,QACLtB,KAAK,QACLuB,SAAU5B,EACV6B,OAAQJ,EACRnB,MAAOgB,EAAOxB,QAEfyB,EAAOzB,OACN,yBAAKe,UAAU,yBACZU,EAAOzB,QAId,yBAAKe,UAAU,cACb,2BAAOa,QAAQ,YAAYR,YAAE,aAC7B,2BACEL,UAAU,oCACVc,KAAK,WACLtB,KAAK,WACLuB,SAAU5B,EACV6B,OAAQJ,EACRnB,MAAOgB,EAAOvB,WAEfwB,EAAOxB,UACN,yBAAKc,UAAU,yBACZU,EAAOxB,WAKd,kBAAC,IAAD,CAAM+B,GAAG,iBACP,4BACEjB,UAAU,yDACVc,KAAK,SACLI,QAAStB,GAERS,YAAE,gBAOb,yBAAKL,UAAU,oBACb,kBAAC,IAAD,CAAMiB,GAAG,2BAA2BjB,UAAU,cAC5C,2BAAIK,YAAE,uBAKd,yBACEL,UAAU,wBACVC,MAAO,CACLkB,eAAgB,QAChBjB,gBAAiB,qCAGnB,yBAAKF,UAAU,mBACb,kBAAC,IAAD,CACEiB,GAAG,kBACHjB,UAAU,kFAEV,uBAAGA,UAAU,wBAA2B,IACvCK,YAAE,oBAGL,kBAAC,IAAD,CAAQL,UAAU,+DAChB,uBAAGA,UAAU,kBACZK,YAAE,qBAEL,kBAAC,IAAD,CAAQL,UAAU,iEAChB,uBAAGA,UAAU,iBADf,IACoCK,YAAE,iC,GA1HnCe,aA2INC,uBALS,SAACrC,GAAD,MAAY,CAClCe,0BAA2BuB,IAAUC,KAAKC,WAC1CC,KAAMzC,EAAMyC,QAG0B,CACtC1B,+BADasB,CAEZtC","file":"static/js/162.9aa8060c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { loginWithEmailAndPassword } from \"app/redux/actions/LoginActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport history from \"@history.js\";\r\nimport { default as t } from \"../../../translations\";\r\n\r\nclass Signin extends Component {\r\n  state = {\r\n    email: \"watson@example.com\",\r\n    password: \"12345678\",\r\n  };\r\n  handleChange = (event) => {\r\n    event.persist();\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    console.log(\"Handle change called\");\r\n    console.log(this.state);\r\n  };\r\n\r\n  handleSubmit = (value, { isSubmitting }) => {\r\n    this.props.loginWithEmailAndPassword(value);\r\n    console.log(\"handle Submit called\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"auth-layout-wrap\"\r\n        style={{\r\n          backgroundImage: \"url(/assets/images/logistics.png)\",\r\n        }}\r\n      >\r\n        <div className=\"auth-content\">\r\n          <div className=\"card bg-white text-white o-hidden\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"p-4\">\r\n                  <div className=\"text-center mb-4\">\r\n                    <img src=\"/assets/images/ziyad-logo.png\" alt=\"logo\" />\r\n                  </div>\r\n                  <h1 className=\"mb-3 text-18 text-white\">{t(\"signin\")}</h1>\r\n                  <Formik\r\n                    initialValues={this.state}\r\n                    onSubmit={this.handleSubmit}\r\n                  >\r\n                    {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                    }) => (\r\n                      <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"email\">{t(\"email\")}</label>\r\n                          <input\r\n                            className=\"form-control form-control-rounded position-relative\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.email}\r\n                          />\r\n                          {errors.email && (\r\n                            <div className=\"text-danger mt-1 ml-2\">\r\n                              {errors.email}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"password\">{t(\"password\")}</label>\r\n                          <input\r\n                            className=\"form-control form-control-rounded\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.password}\r\n                          />\r\n                          {errors.password && (\r\n                            <div className=\"text-danger mt-1 ml-2\">\r\n                              {errors.password}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n\r\n                        <Link to=\"/dashboard/v1\">\r\n                          <button\r\n                            className=\"btn btn-rounded btn-success text-white w-100 my-1 mt-2\"\r\n                            type=\"submit\"\r\n                            onClick={handleSubmit}\r\n                          >\r\n                            {t(\"signin\")}\r\n                          </button>\r\n                        </Link>\r\n                      </form>\r\n                    )}\r\n                  </Formik>\r\n\r\n                  <div className=\"mt-3 text-center\">\r\n                    <Link to=\"/session/forgot-password\" className=\"text-muted\">\r\n                      <u>{t(\"forgotPassword\")}</u>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"col-md-6 text-center \"\r\n                style={{\r\n                  backgroundSize: \"cover\",\r\n                  backgroundImage: \"url(/assets/images/dark-log.jpg)\",\r\n                }}\r\n              >\r\n                <div className=\"pe-3 auth-right\">\r\n                  <Link\r\n                    to=\"/session/signup\"\r\n                    className=\"btn btn-rounded btn-outline-primary btn-outline-email w-100 my-1 btn-icon-text\"\r\n                  >\r\n                    <i className=\"i-Mail-with-At-Sign\"></i>{\" \"}\r\n                    {t(\"signUpWithEmail\")}\r\n                  </Link>\r\n\r\n                  <Button className=\"btn btn-rounded btn-outline-google w-100 my-1 btn-icon-text\">\r\n                    <i className=\"i-Google-Plus\"></i>\r\n                    {t(\"signUpWithGoogle\")}\r\n                  </Button>\r\n                  <Button className=\"btn btn-rounded w-100 my-1 btn-icon-text btn-outline-facebook\">\r\n                    <i className=\"i-Facebook-2\"></i> {t(\"signUpWithFacebook\")}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loginWithEmailAndPassword: PropTypes.func.isRequired,\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  loginWithEmailAndPassword,\r\n})(Signin);\r\n"],"sourceRoot":""}