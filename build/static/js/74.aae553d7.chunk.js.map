{"version":3,"sources":["app/views/Locations/lastMileLocation/AddLastMileLocation.jsx","app/views/User/UserComponents/DataFetcher.jsx","app/views/User/UserComponents/GetCity.jsx","app/views/User/UserComponents/GetCountry.jsx","app/views/User/UserComponents/Address.jsx","app/views/User/UserComponents/Contact.jsx"],"names":["AddLastMileLocation","locationDataDTO","lastmileLocationDto","isLocationById","custId","location","address","_long","cityId","geoLink","lang","streetAddress","addressId","contact","countryCode","networkCode","number","numberType","contactId","statusId","title","type","isAddressById","isContactById","locationId","handleClick","e","console","log","axios","post","headers","SessionKey","Event","then","res","status","data","Error","catch","err","GetContact","props","GetAddress","t","className","Data","this","md","Label","placeholder","aria-label","aria-describedby","onChange","parseInt","target","value","variant","onClick","Component","DataFetcher","useEffect","a","get","url","event","id","idsetter","fetch","GetCity","City","CitiesGetter","forceUpdate","returnid","required","selected","map","n","name","GetCountry","Country","CountriesGetter","country","Address","Get_city_id","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Contact"],"mappings":"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","file":"static/js/74.aae553d7.chunk.js","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\nimport Address from \"app/views/User/UserComponents/Address\";\r\nimport Contact from \"app/views/User/UserComponents/Contact\";\r\nexport default class AddLastMileLocation extends Component {\r\n  locationDataDTO = {\r\n    lastmileLocationDto: {\r\n      isLocationById: false,\r\n      custId: 0,\r\n      location: {\r\n        address: {\r\n          _long: 0,\r\n          cityId: 0,\r\n          geoLink: \"\",\r\n          lang: 0,\r\n          streetAddress: \"\",\r\n        },\r\n        addressId: 0,\r\n        contact: {\r\n          countryCode: 0,\r\n          networkCode: 0,\r\n          number: 0,\r\n          numberType: \"\",\r\n        },\r\n        contactId: 0,\r\n        statusId: 0,\r\n        title: \"\",\r\n        type: \"\",\r\n        isAddressById: false,\r\n        isContactById: false,\r\n      },\r\n      locationId: 0,\r\n    },\r\n  };\r\n  handleClick = (e) => {\r\n    console.log(this.locationDataDTO);\r\n    axios\r\n      .post(\"http://15.235.141.168:70/location/add\", this.locationDataDTO, {\r\n        headers: { SessionKey: \"123\", Event: \"Create-Cust-Location\" },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          return res.data.data;\r\n        } else {\r\n          throw new Error(res.locationDataDTO);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n  GetContact = (props) => {\r\n    console.log(props);\r\n    this.locationDataDTO.lastmileLocationDto.location.contact = props;\r\n  };\r\n\r\n  GetAddress = (props) => {\r\n    console.log(props);\r\n    this.locationDataDTO.lastmileLocationDto.location.address = props;\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col>\r\n            <h2>\r\n              {t(\"View LastMile Location\")} / {t(\"Add\")}\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mt-2\">\r\n          <Form>\r\n            <Row>\r\n              <Contact Data={this.GetContact} />\r\n              <Address Data={this.GetAddress} />\r\n              <Row>\r\n                <Col md={6} className=\"mt-2\">\r\n                  <Form.Label>\r\n                    <h5>{t(\"Customer ID\")} </h5>\r\n                  </Form.Label>\r\n\r\n                  <FormControl\r\n                    placeholder={t(\"Customer ID\")}\r\n                    aria-label=\"Enddate\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    onChange={(e) => {\r\n                      this.locationDataDTO.lastmileLocationDto.custId =\r\n                        parseInt(e.target.value, 10);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col md={6} className=\"mt-2\">\r\n                  <Form.Label>\r\n                    <h5>{t(\"Status Id\")} </h5>\r\n                  </Form.Label>\r\n\r\n                  <FormControl\r\n                    placeholder={t(\"Status Id\")}\r\n                    aria-label=\"Enddate\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    onChange={(e) => {\r\n                      this.locationDataDTO.lastmileLocationDto.location.statusId =\r\n                        parseInt(e.target.value, 10);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col md={6} className=\"mt-2\">\r\n                  <Form.Label>\r\n                    <h5>{t(\"Title\")} </h5>\r\n                  </Form.Label>\r\n\r\n                  <FormControl\r\n                    placeholder={t(\"Title\")}\r\n                    aria-label=\"Enddate\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    onChange={(e) => {\r\n                      this.locationDataDTO.lastmileLocationDto.location.title =\r\n                        e.target.value;\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col md={6} className=\"mt-2\">\r\n                  <Form.Label>\r\n                    <h5>{t(\"Type\")} </h5>\r\n                  </Form.Label>\r\n\r\n                  <FormControl\r\n                    placeholder={t(\"Type\")}\r\n                    aria-label=\"Enddate\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    onChange={(e) => {\r\n                      this.locationDataDTO.lastmileLocationDto.location.type =\r\n                        e.target.value;\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Row>\r\n\r\n            <Row className=\"mt-2 \">\r\n              <Col className=\"d-flex justify-content-end\">\r\n                <Button className=\"mx-2\" variant=\"danger\">\r\n                  {t(\"discard\")}\r\n                </Button>{\" \"}\r\n                <Button\r\n                  className=\"mx-2\"\r\n                  variant=\"success\"\r\n                  onClick={this.handleClick}\r\n                >\r\n                  {t(\"create\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst DataFetcher = (props) => {\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      await axios\r\n        .get(props.url, {\r\n          headers: {\r\n            SessionKey: \"123\",\r\n            Event: props.event,\r\n            id: props.idsetter,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          props.Data(res.data.data);\r\n          if (res.status === 200) {\r\n            return res;\r\n          } else {\r\n            throw new Error(res);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          throw err;\r\n        });\r\n    };\r\n    fetch();\r\n  }, []);\r\n\r\n  return null;\r\n};\r\nexport default DataFetcher;\r\n","import React, { Component } from \"react\";\r\nimport DataFetcher from \"./DataFetcher\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\nexport default class GetCity extends Component {\r\n  City = [];\r\n\r\n  CitiesGetter = (props) => {\r\n    console.log(props);\r\n    this.City = props;\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Col md={6} className=\"mt-2\">\r\n        <DataFetcher\r\n          Data={this.CitiesGetter}\r\n          url={\"http://15.235.141.168:70/util/get-city\"}\r\n        />\r\n        <Form.Label>\r\n          <h5>{t(\"City\")} </h5>\r\n        </Form.Label>\r\n\r\n        <InputGroup>\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            onChange={(e) => {\r\n              const returnid = e.target.value;\r\n              this.props.Data(returnid);\r\n              console.log(this.City);\r\n            }}\r\n            required\r\n          >\r\n            <option selected>{t(\"City\")}</option>\r\n\r\n            {this.City.map((n) => {\r\n              return <option value={n.id}>{n.name}</option>;\r\n            })}\r\n          </select>\r\n        </InputGroup>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DataFetcher from \"./DataFetcher\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\nexport default class GetCountry extends Component {\r\n  Country = [];\r\n\r\n  CountriesGetter = (props) => {\r\n    console.log(props);\r\n    this.Country = props;\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Col md={6} className=\"mt-2\">\r\n        <DataFetcher\r\n          Data={this.CountriesGetter}\r\n          url={\"http://15.235.141.168:70/util/get-country\"}\r\n        />\r\n        <Form.Label>\r\n          <h5>{t(\"Country\")} </h5>\r\n        </Form.Label>\r\n\r\n        <InputGroup>\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            onChange={(e) => {\r\n              const returnid = e.target.value;\r\n              this.props.Data(returnid);\r\n              console.log(this.Country);\r\n            }}\r\n            required\r\n          >\r\n            <option selected>{t(\"Country\")}</option>\r\n\r\n            {this.Country.map((n) => {\r\n              return <option value={n.id}>{n.country}</option>;\r\n            })}\r\n          </select>\r\n        </InputGroup>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { default as t } from \"../../../../translations\";\r\nimport axios from \"axios\";\r\nimport GetCountry from \"../UserComponents/GetCountry\";\r\nimport GetCity from \"../UserComponents/GetCity\";\r\nexport default class Address extends Component {\r\n  address = {\r\n    _long: 0,\r\n    cityId: 0,\r\n    streetAddress: \"\",\r\n    lang: 0,\r\n    geoLink: \"\",\r\n  };\r\n  Get_city_id = (props) => {\r\n    this.address.cityId = parseInt(props, 10);\r\n    this.props.Data(this.address);\r\n  };\r\n  GetCountry = (props) => {};\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <GetCountry Data={this.GetCountry} />\r\n\r\n        <GetCity Data={this.Get_city_id} />\r\n\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"Street Address\")} </h5>\r\n          </Form.Label>\r\n\r\n          <FormControl\r\n            name=\"streetAdress\"\r\n            placeholder={t(\"Street Address\")}\r\n            aria-label=\"Enddate\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(e) => {\r\n              this.address.streetAddress = e.target.value;\r\n              this.props.Data(this.address);\r\n            }}\r\n            required\r\n          />\r\n        </Col>\r\n\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"addLocation\")} </h5>\r\n          </Form.Label>\r\n          <InputGroup>\r\n            <FormControl\r\n              placeholder={t(\"Location\")}\r\n              aria-label=\"Enddate\"\r\n              aria-describedby=\"basic-addon1\"\r\n              name=\"AddLocation\"\r\n            />\r\n            <Button\r\n              onClick={(e) => {\r\n                navigator.geolocation.getCurrentPosition((position) => {\r\n                  console.log(\"Latitude : \", position.coords.latitude);\r\n                  console.log(\"Longitude : \", position.coords.longitude);\r\n                  this.address.lang = position.coords.latitude;\r\n                  this.address._long = position.coords.longitude;\r\n                  this.props.Data(this.address);\r\n                });\r\n              }}\r\n            >\r\n              {t(\"addLocation\")}{\" \"}\r\n            </Button>\r\n          </InputGroup>\r\n        </Col>\r\n\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"Geo Link\")} </h5>\r\n          </Form.Label>\r\n\r\n          <FormControl\r\n            placeholder={t(\"Geo Link\")}\r\n            aria-label=\"Enddate\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(e) => {\r\n              this.address.geoLink = e.target.value;\r\n              this.props.Data(this.address);\r\n            }}\r\n            required\r\n          />\r\n        </Col>\r\n\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"Postal Code\")} </h5>\r\n          </Form.Label>\r\n\r\n          <FormControl\r\n            placeholder={t(\"Postal Code\")}\r\n            aria-label=\"Enddate\"\r\n            required\r\n            name=\"PostalCode\"\r\n            aria-describedby=\"basic-addon1\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { default as t } from \"../../../../translations\";\r\nexport default class Contact extends Component {\r\n  contact = {\r\n    countryCode: \"\",\r\n    networkCode: 0,\r\n    number: 0,\r\n    numberType: \"\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"Country Code\")} </h5>\r\n          </Form.Label>\r\n\r\n          <FormControl\r\n            placeholder={t(\"Country Code\")}\r\n            aria-label=\"Enddate\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(e) => {\r\n              this.contact.countryCode = e.target.value;\r\n              this.props.Data(this.contact);\r\n            }}\r\n            required\r\n          />\r\n        </Col>\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"Network Code\")} </h5>\r\n          </Form.Label>\r\n\r\n          <FormControl\r\n            placeholder={t(\"Network Code\")}\r\n            aria-label=\"Enddate\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(e) => {\r\n              this.contact.networkCode = parseInt(e.target.value, 10);\r\n              this.props.Data(this.contact);\r\n            }}\r\n            required\r\n          />\r\n        </Col>\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"Number\")} </h5>\r\n          </Form.Label>\r\n\r\n          <FormControl\r\n            placeholder={t(\"Number\")}\r\n            aria-label=\"Enddate\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(e) => {\r\n              this.contact.number = parseInt(e.target.value, 10);\r\n              this.props.Data(this.contact);\r\n            }}\r\n            required\r\n          />\r\n        </Col>\r\n        <Col md={6} className=\"mt-2\">\r\n          <Form.Label>\r\n            <h5>{t(\"Number Type\")} </h5>\r\n          </Form.Label>\r\n\r\n          <FormControl\r\n            placeholder={t(\"Number Type\")}\r\n            aria-label=\"Enddate\"\r\n            aria-describedby=\"basic-addon1\"\r\n            onChange={(e) => {\r\n              this.contact.numberType = e.target.value;\r\n              this.props.Data(this.contact);\r\n            }}\r\n            required\r\n          />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}