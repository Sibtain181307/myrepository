{"version":3,"sources":["app/views/fleet/vehicles/AddVehicle.jsx","../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js"],"names":["AddVehicle","t","className","Body","md","Label","Control","placeholder","type","Item","variant","alignDirection","PropTypes","oneOf","alignPropType","oneOfType","shape","sm","lg","xl","xxl","propTypes","id","string","href","onClick","func","title","node","isRequired","disabled","bool","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","bsPrefix","size","DropdownButton","React","ref","children","props","_jsxs","Dropdown","_jsx","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName"],"mappings":"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","file":"static/js/113.0dad6b13.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  Row,\r\n  Col,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\nconst AddVehicle = () => {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col>\r\n          <h2>\r\n            {t(\"viewVehicles\")} / {t(\"addVehicle\")}\r\n          </h2>\r\n        </Col>\r\n      </Row>\r\n      <Card className=\"mb-4\">\r\n        <Card.Body>\r\n          <Row className=\"mt-2\">\r\n            <Form>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Label>{t(\"makeYear\")}</Form.Label>\r\n                  <Form.Control placeholder=\"--enter vehicle make year--\" />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Form.Label>{t(\"makeModel\")}</Form.Label>\r\n                  <Form.Control placeholder=\"--enter vehicle make model--\" />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Label>{t(\"registration\")}</Form.Label>\r\n                  <Form.Control placeholder=\"--enter vehicle registration--\" />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Form.Label>{t(\"pucrchaseSlip\")}</Form.Label>\r\n\r\n                  <Form.Control type=\"file\" />\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                  <Form.Label>{t(\"mileage\")}</Form.Label>\r\n                  <Form.Control placeholder=\"--enter vehicle mileage--\" />\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                  <Form.Label>{t(\"registration\")}</Form.Label>\r\n                  <Form.Control type=\"file\" />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Label>{t(\"selectWarehouse\")}</Form.Label>\r\n                  <InputGroup>\r\n                    <Form.Control placeholder=\"--Select Warehouse--\" />\r\n                    <DropdownButton>\r\n                      <Dropdown.Item>Item1</Dropdown.Item>\r\n                    </DropdownButton>\r\n                  </InputGroup>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mt-2 \">\r\n                <Col className=\"d-flex justify-content-end\">\r\n                  <Button className=\"mx-2\" variant=\"danger\">\r\n                    {t(\"discard\")}\r\n                  </Button>{\" \"}\r\n                  <Button className=\"mx-2\" variant=\"success\">\r\n                    {t(\"create\")}\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddVehicle;\r\n","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n})]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;"],"sourceRoot":""}