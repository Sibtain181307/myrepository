{"version":3,"sources":["../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js"],"names":["size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","ownerDocument","active","nodeName","e","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","manager","OPEN_DATA_ATTRIBUTE","dataAttr","ModalManager","handleContainerOverflow","isRTL","this","modals","Math","abs","window","innerWidth","documentElement","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","remove","removeAttribute","Object","assign","modal","modalIdx","indexOf","length","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","_excluded","useModalManager","provided","modalManager","dialog","backdrop","add","isTopModal","setDialogRef","useCallback","ref","setBackdropRef","Modal","forwardRef","_ref","show","role","className","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","useState","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","createPortal","_jsxs","displayName","Manager","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","element","adjust","actual","dataset","parseFloat","classList","hasClass","baseVal","marginProp","qsa","el","adjustAndStore","restore","createWithBsPrefix","ModalContext","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","classNames","propTypes","PropTypes","string","func","variant","oneOf","CloseButton","type","defaultProps","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","handleClick","ModalHeader","DivStyledAsH4","divWithClassName","Component","animation","dialogAs","DialogTransition","Fade","timeout","dialogClassName","Dialog","ariaLabelledby","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","options","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","Provider","BaseModal","preventDefault","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","property","receiver","Reflect","get","base","object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor"],"mappings":"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","file":"static/js/15.41c0eac4.chunk.js","sourcesContent":["import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth();\n  }\n\n  getElement() {\n    return document.body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager() {\n  if (!manager) manager = new ModalManager();\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const modalManager = provided || getManager();\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth() {\n  return Math.abs(window.innerWidth - document.documentElement.clientWidth);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}"],"sourceRoot":""}