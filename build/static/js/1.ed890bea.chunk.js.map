{"version":3,"sources":["../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/InputGroupContext.js"],"names":["InputGroupText","createWithBsPrefix","Component","InputGroup","React","ref","bsPrefix","size","hasValidation","className","as","props","useBootstrapPrefix","contextValue","useMemo","_jsx","InputGroupContext","Provider","value","children","classNames","displayName","Object","assign","Text","Radio","FormCheckInput","type","Checkbox","FormContext","_excluded","useButtonProps","tagName","disabled","href","target","rel","onClick","tabIndex","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","role","undefined","onKeyDown","key","Button","_ref","asProp","source","excluded","i","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","FormGroup","controlId","context","propTypes","PropTypes","string","tooltip","bool","elementType","Feedback","DEVICE_SIZES","Col","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","id","isValid","isInvalid","useContext","FormControl","htmlSize","plaintext","readOnly","FormLabel","column","visuallyHidden","htmlFor","columnClass","defaultProps","Row","decoratedBsPrefix","sizePrefix","cols","variant","active","prefix","FormCheckLabel","FormCheck","bsSwitchPrefix","inline","feedbackTooltip","feedback","style","title","label","innerFormContext","hasLabel","input","_jsxs","_Fragment","Input","Label","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","any","validated","Form","Group","Control","Floating","FormFloating","Check","Range","Select"],"mappings":"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","file":"static/js/1.ed890bea.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span = true,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...classes, ...spans)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), (isValid || isInvalid) && /*#__PURE__*/_jsx(Feedback, {\n          type: isValid ? 'valid' : 'invalid',\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;"],"sourceRoot":""}