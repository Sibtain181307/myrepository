{"version":3,"sources":["app/views/finance/shipper-billing/invoices/CreateInvoices.jsx","../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js"],"names":["CreateInvoices","t","Body","md","Label","Control","Item","className","elevation","Title","value","disabled","type","palceholder","placeholder","alignDirection","PropTypes","oneOf","alignPropType","oneOfType","shape","sm","lg","xl","xxl","propTypes","id","string","href","onClick","func","title","node","isRequired","bool","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","bsPrefix","variant","size","DropdownButton","React","ref","children","props","_jsxs","Dropdown","_jsx","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName"],"mappings":"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","file":"static/js/110.71018ee1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  Row,\r\n  Col,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\nimport { default as t } from \"../../../../../translations\";\r\n\r\nconst CreateInvoices = () => {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col>\r\n          <h2>{t(\"createInvoice\")}</h2>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Card>\r\n          <Card.Body>\r\n            <Col md={6}>\r\n              <Form>\r\n                <Form.Label>{t(\"shipper\")}</Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control />\r\n                  <DropdownButton>\r\n                    <Dropdown.Item>Item1</Dropdown.Item>\r\n                  </DropdownButton>\r\n                </InputGroup>\r\n              </Form>\r\n            </Col>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row>\r\n\r\n      <Row className=\"mt-4\">\r\n        <Card>\r\n          <Card.Body>\r\n            <Row className=\"d-flex justify-content-center align-items-center px-5\">\r\n              <Col>\r\n                <h4>{t(\"billingType\")}</h4>\r\n              </Col>\r\n              <Col>\r\n                <h4>{t(\"postpaid\")}</h4>\r\n              </Col>\r\n\r\n              <Col>\r\n                <h4>{t(\"balance\")}</h4>\r\n              </Col>\r\n              <Col>\r\n                <h4>Sr. 12345</h4>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row>\r\n      <Row className=\"mt-4\">\r\n        <Card elevation={6} className=\"mt-4\">\r\n          <Card.Body>\r\n            <Card.Title className=\"text-center\">{t(\"forPostpaid\")}</Card.Title>\r\n            <Form>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Label>{t(\"lastBillClosingDate\")}</Form.Label>\r\n                  <Form.Control value=\"22/03/22\" disabled />\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                  <Form.Label>{t(\"newInvoiceClosingDate\")}</Form.Label>\r\n                  <Form.Control type=\"date\" />\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                  <Form.Label>{t(\"newInvoiceDueDate\")}</Form.Label>\r\n                  <Form.Control type=\"date\" />\r\n                </Col>\r\n\r\n                <div className=\"d-flex justify-content-center justify-content-md-end mt-2\">\r\n                  <Button>{t(\"create\")}</Button>\r\n                </div>\r\n              </Row>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row>\r\n\r\n      <Row className=\"my-4\">\r\n        <Card elevation={6} className=\"mt-4\">\r\n          <Card.Body>\r\n            <Card.Title className=\"text-center\">{t(\"forPrepaid\")}</Card.Title>\r\n            <Form>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Label>{t(\"selectPaymentMethod\")}</Form.Label>\r\n                  <InputGroup>\r\n                    <Form.Control palceholder=\"--select payment method--\" />\r\n                    <DropdownButton>\r\n                      <Dropdown.Item>Itemm1</Dropdown.Item>\r\n                    </DropdownButton>\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Form.Label>{t(\"creditAmount\")}</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder=\"enter credit amount\"\r\n                  />\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                  <Form.Label>{t(\"paymentProof\")}</Form.Label>\r\n                  <Form.Control type=\"file\" />\r\n                </Col>\r\n\r\n                <div className=\"d-flex justify-content-center justify-content-md-end mt-2\">\r\n                  <Button>{t(\"credit\")}</Button>\r\n                </div>\r\n              </Row>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateInvoices;\r\n","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n})]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;"],"sourceRoot":""}