{"version":3,"sources":["app/views/Locations/lastMileLocation/ViewLastMileLocation.jsx","app/views/User/UserComponents/DataFetcher.jsx","../node_modules/react-bootstrap/esm/Table.js","app/views/Locations/LocationComponents/GetCityName.jsx"],"names":["ViewLastMileLocation","ViewCustLocation","ValueGetter","props","console","log","axios","get","headers","SessionKey","Event","then","res","data","map","i","index","cityId","push","forceUpdate","status","Error","catch","err","GetViewData","Data","this","url","event","t","className","to","size","Body","elevation","style","minWidth","id","warhouse","address","location","contact","contactType","pathname","variant","Component","DataFetcher","useEffect","a","idsetter","fetch","Table","React","ref","bsPrefix","striped","bordered","borderless","hover","responsive","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","GetCityName","City","CitiesGetter","md","Label","aria-label","onChange","e","returnid","target","value","required","selected","n","name"],"mappings":"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","file":"static/js/88.5899a9cd.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\nimport { default as t } from \"../../../../translations\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport GetCityName from \"./../LocationComponents/GetCityName\";\r\nimport DataFetcher from \"app/views/User/UserComponents/DataFetcher\";\r\nexport default class ViewLastMileLocation extends Component {\r\n  ViewCustLocation = [];\r\n\r\n  ValueGetter = (props) => {\r\n    this.ViewCustLocation = [];\r\n    console.log(props);\r\n    axios\r\n      .get(\"http://15.235.141.168:70/location/view\", {\r\n        headers: { SessionKey: \"123\", Event: \"View-Cust-Location\" },\r\n      })\r\n      .then((res) => {\r\n        res.data.data.map((i, index) => {\r\n          {\r\n            console.log(i);\r\n            if (props == i.cityId) {\r\n              this.ViewCustLocation.push(i);\r\n              this.forceUpdate();\r\n              console.log(this.ViewCustLocation);\r\n            } else {\r\n              console.log(\"this is not working\");\r\n            }\r\n          }\r\n        });\r\n        if (res.status === 200) {\r\n          return res;\r\n        } else {\r\n          throw new Error(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n  GetViewData = (props) => {\r\n    this.ViewCustLocation = props;\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DataFetcher\r\n          Data={this.GetViewData}\r\n          url=\"http://15.235.141.168:70/location/view\"\r\n          event=\"View-Cust-Location\"\r\n        />\r\n        <Row>\r\n          <Col>\r\n            <h2>{t(\"View LastMile Location\")}</h2>\r\n          </Col>\r\n          <Col className=\"d-flex flex-row-reverse mx-5\">\r\n            <Link to=\"/lastMileLocation/add\">\r\n              <Button size=\"lg\">\r\n                <i className=\"i-Add\"></i> {t(\"Add LastMile Location\")}\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-1\">\r\n          <Form>\r\n            <Card>\r\n              <Card.Body>\r\n                <Row>\r\n                  <GetCityName Data={this.ValueGetter} />\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Form>\r\n        </Row>\r\n        <Card elevation={6} className=\"w-100 overflow-auto mt-4\">\r\n          <Table style={{ minWidth: 750 }}>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"pl-0\">{t(\"Id\")}</th>\r\n                <th className=\"px-0\">{t(\"warehouse\")}</th>\r\n                <th className=\"px-0\">{t(\"Address\")}</th>\r\n                <th className=\"px-0\">{t(\"Location\")}</th>\r\n                <th className=\"px-0\">{t(\"Contact\")}</th>\r\n                <th className=\"px-0\">{t(\"Contact Type\")}</th>\r\n              </tr>\r\n            </thead>\r\n            {this.ViewCustLocation.map((i) => {\r\n              return (\r\n                <tbody>\r\n                  <td>{i.id}</td>\r\n                  <td>{i.warhouse}</td>\r\n                  <td>{i.address}</td>\r\n                  <td>{i.location}</td>\r\n                  <td>{i.contact}</td>\r\n                  <td>{i.contactType}</td>\r\n                  <td>\r\n                    <Link to={{ pathname: \"/lastMileLocation/edit\", id: i.id }}>\r\n                      <Button variant=\"success\">\r\n                        <i className=\"i-Pen-2\"></i>\r\n                      </Button>{\" \"}\r\n                    </Link>\r\n                    <Button variant=\"danger\">\r\n                      <i className=\"i-Remove\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tbody>\r\n              );\r\n            })}\r\n          </Table>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst DataFetcher = (props) => {\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      await axios\r\n        .get(props.url, {\r\n          headers: {\r\n            SessionKey: \"123\",\r\n            Event: props.event,\r\n            id: props.idsetter,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          props.Data(res.data.data);\r\n          if (res.status === 200) {\r\n            return res;\r\n          } else {\r\n            throw new Error(res);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          throw err;\r\n        });\r\n    };\r\n    fetch();\r\n  }, []);\r\n\r\n  return null;\r\n};\r\nexport default DataFetcher;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import React, { Component } from \"react\";\r\nimport DataFetcher from \"app/views/User/UserComponents/DataFetcher\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\nexport default class GetCityName extends Component {\r\n  City = [];\r\n\r\n  CitiesGetter = (props) => {\r\n    console.log(props);\r\n    this.City = props;\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Col md={6} className=\"mt-2\">\r\n        <DataFetcher\r\n          Data={this.CitiesGetter}\r\n          url={\"http://15.235.141.168:70/util/get-city\"}\r\n        />\r\n        <Form.Label>\r\n          <h5>{t(\"City\")} </h5>\r\n        </Form.Label>\r\n\r\n        <InputGroup>\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            onChange={(e) => {\r\n              const returnid = e.target.value;\r\n              this.props.Data(returnid);\r\n              console.log(this.City);\r\n            }}\r\n            required\r\n          >\r\n            <option selected>{t(\"City\")}</option>\r\n\r\n            {this.City.map((n) => {\r\n              return <option value={n.id}>{n.name}</option>;\r\n            })}\r\n          </select>\r\n        </InputGroup>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}