{"version":3,"sources":["app/views/Locations/view-hub/EditForm.jsx","app/views/User/UserComponents/DataFetcher.jsx","app/views/User/UserComponents/GetCity.jsx","app/views/User/UserComponents/GetCountry.jsx"],"names":["EditFormHub","hubUpdateDto","accuringDate","amountPurchased","currency","id","isPurchased","isSold","rent","soldAmount","validityDate","contactUpdateDto","countryCode","networkCode","number","numberType","addressUpdateDto","_long","geoLink","lang","streetAddress","handleClickAddress","e","console","log","axios","put","headers","SessionKey","then","res","catch","err","handleClickContact","Getid","props","location","handleClick","EditData","status","data","Error","this","locationDataDTO","Get_city_id","cityId","resource","hubDto","hubLocation","address","contact","forceUpdate","history","push","pathname","t","className","Body","md","Label","name","placeholder","aria-label","aria-describedby","onChange","target","value","parseInt","variant","onClick","Data","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Component","DataFetcher","useEffect","a","get","url","Event","event","idsetter","fetch","GetCity","City","CitiesGetter","returnid","required","selected","map","n","GetCountry","Country","CountriesGetter","country"],"mappings":"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","file":"static/js/92.e7a1c5dd.chunk.js","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\nimport axios from \"axios\";\r\nimport history from \"@history\";\r\nimport DataFetcher from \"app/views/User/UserComponents/DataFetcher\";\r\nimport GetCountry from \"app/views/User/UserComponents/GetCountry\";\r\nimport GetCity from \"app/views/User/UserComponents/GetCity\";\r\nexport default class EditFormHub extends Component {\r\n  hubUpdateDto = {\r\n    accuringDate: \"\",\r\n    amountPurchased: 0,\r\n    currency: \"\",\r\n    id: 0,\r\n    isPurchased: 0,\r\n    isSold: 0,\r\n    rent: 0,\r\n    soldAmount: 0,\r\n    validityDate: \"\",\r\n  };\r\n  contactUpdateDto = {\r\n    countryCode: \"\",\r\n    id: null,\r\n    networkCode: null,\r\n    number: null,\r\n    numberType: \"\",\r\n  };\r\n  addressUpdateDto = {\r\n    _long: null,\r\n    geoLink: \"\",\r\n    id: null,\r\n    lang: null,\r\n    streetAddress: \"\",\r\n  };\r\n  handleClickAddress = (e) => {\r\n    console.log(this.addressUpdateDto);\r\n    axios\r\n      .put(\"http://15.235.141.168:70/address/update\", this.addressUpdateDto, {\r\n        headers: { SessionKey: \"123\" },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n  handleClickContact = (e) => {\r\n    console.log(this.contactUpdateDto);\r\n    axios\r\n      .put(\"http://15.235.141.168:70/contact/update\", this.contactUpdateDto, {\r\n        headers: { SessionKey: \"123\" },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    console.log(this.hubUpdateDto);\r\n    this.hubUpdateDto.accuringDate =\r\n      this.props.location.resource.hubDto.hubLocation.accuringDate;\r\n    this.hubUpdateDto.validityDate =\r\n      this.props.location.resource.hubDto.hubLocation.validityDate;\r\n    this.hubUpdateDto.currency =\r\n      this.props.location.resource.hubDto.hubLocation.currency;\r\n    this.hubUpdateDto.soldAmount =\r\n      this.props.location.resource.hubDto.hubLocation.soldAmount;\r\n    this.addressUpdateDto =\r\n      this.props.location.resource.hubDto.hubLocation.address;\r\n    this.contactUpdateDto =\r\n      this.props.location.resource.hubDto.hubLocation.contact;\r\n    this.hubUpdateDto.rent =\r\n      this.props.location.resource.hubDto.hubLocation.rent;\r\n\r\n    this.forceUpdate();\r\n  }\r\n  Getid = () => {\r\n    return this.props.location.id;\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    console.log(this.EditData);\r\n    axios\r\n      .put(\"http://15.235.141.168:70/hub/update\", this.EditData, {\r\n        headers: { SessionKey: \"123\" },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 211) {\r\n          return res.data.data;\r\n        } else {\r\n          throw new Error(res.this.locationDataDTO);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n  Get_city_id = (props) => {\r\n    this.addressUpdateDto.cityId = props;\r\n  };\r\n  componentWillUnmount() {\r\n    history.push({\r\n      pathname: \"/hub/viewhubs\",\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col>\r\n            <h2>\r\n              {t(\"Edit Hub\")} / {t(\"Edit\")}{\" \"}\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-1\">\r\n          <Form>\r\n            <Card>\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Country Code\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      name=\"countryCode\"\r\n                      placeholder={t(\"Country Code\")}\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.contactUpdateDto.countryCode = e.target.value;\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Network Code\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      name=\"networkCode\"\r\n                      placeholder={t(\"Network Code\")}\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.contactUpdateDto.networkCode = parseInt(\r\n                          e.target.value,\r\n                          10\r\n                        );\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Number\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      name=\"number\"\r\n                      placeholder={t(\"Number\")}\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.contactUpdateDto.number = parseInt(\r\n                          e.target.value,\r\n                          10\r\n                        );\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Number Type\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      name=\"numberType\"\r\n                      placeholder={t(\"Number Type\")}\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.contactUpdateDto.numberType = e.target.value;\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Row className=\"mt-2\">\r\n                    <Col className=\"d-flex justify-content-end align-items-center\">\r\n                      <Button\r\n                        className=\"mx-2\"\r\n                        variant=\"success\"\r\n                        onClick={this.handleClickContact}\r\n                      >\r\n                        {t(\"Update\")}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <GetCountry />\r\n\r\n                  <GetCity Data={this.Get_city_id} />\r\n\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Street Address\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      name=\"streetAdress\"\r\n                      placeholder={t(\"Street Address\")}\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.addressUpdateDto.streetAddress = e.target.value;\r\n                      }}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"addLocation\")} </h5>\r\n                    </Form.Label>\r\n                    <InputGroup>\r\n                      <FormControl\r\n                        placeholder={t(\"Add Location\")}\r\n                        aria-label=\"Enddate\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        name=\"AddLocation\"\r\n                      />\r\n                      <Button\r\n                        onClick={(e) => {\r\n                          navigator.geolocation.getCurrentPosition(\r\n                            (position) => {\r\n                              console.log(\r\n                                \"Latitude : \",\r\n                                position.coords.latitude\r\n                              );\r\n                              console.log(\r\n                                \"Longitude : \",\r\n                                position.coords.longitude\r\n                              );\r\n                              this.addressUpdateDto.lang =\r\n                                position.coords.latitude;\r\n                              this.addressUpdateDto._long =\r\n                                position.coords.longitude;\r\n                            }\r\n                          );\r\n                        }}\r\n                      >\r\n                        {t(\"addLocation\")}{\" \"}\r\n                      </Button>\r\n                    </InputGroup>\r\n                  </Col>\r\n\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Geo Link\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      placeholder={t(\"Geo Link\")}\r\n                      aria-label=\"Enddate\"\r\n                      name=\"GeoLink\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.addressUpdateDto.geoLink = e.target.value;\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Row className=\"mt-2\">\r\n                    <Col className=\"d-flex justify-content-end align-items-center\">\r\n                      <Button\r\n                        className=\"mx-2\"\r\n                        variant=\"success\"\r\n                        onClick={this.handleClickAddress}\r\n                      >\r\n                        {t(\"Update\")}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Validity Date\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      placeholder=\"yyyy-mm-dd\"\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.hubUpdateDto.validityDate = e.target.value;\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Amount Purchased\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      placeholder={t(\"Amount Purchased\")}\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.hubUpdateDto.amountPurchased = parseInt(\r\n                          e.target.value,\r\n                          10\r\n                        );\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Currency\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      placeholder={t(\"Currency\")}\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.hubUpdateDto.currency = e.target.value;\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Is Purchased?\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      placeholder=\"yes/no\"\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        {\r\n                          e.target.value === true\r\n                            ? (this.hubUpdateDto.isPurchased = 1)\r\n                            : (this.hubUpdateDto.isPurchased = 0);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col md={6} className=\"mt-2\">\r\n                    <Form.Label>\r\n                      <h5>{t(\"Rent\")} </h5>\r\n                    </Form.Label>\r\n\r\n                    <FormControl\r\n                      placeholder={t(\"Rent\")}\r\n                      aria-label=\"Enddate\"\r\n                      aria-describedby=\"basic-addon1\"\r\n                      onChange={(e) => {\r\n                        this.hubUpdateDto.rent = parseInt(e.target.value, 10);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Row className=\"mt-2\">\r\n                    <Col className=\"d-flex justify-content-end align-items-center\">\r\n                      <Button\r\n                        className=\"mx-2\"\r\n                        variant=\"success\"\r\n                        onClick={this.handleClick}\r\n                      >\r\n                        {t(\"Edit\")}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Form>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst DataFetcher = (props) => {\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      await axios\r\n        .get(props.url, {\r\n          headers: {\r\n            SessionKey: \"123\",\r\n            Event: props.event,\r\n            id: props.idsetter,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          props.Data(res.data.data);\r\n          if (res.status === 200) {\r\n            return res;\r\n          } else {\r\n            throw new Error(res);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          throw err;\r\n        });\r\n    };\r\n    fetch();\r\n  }, []);\r\n\r\n  return null;\r\n};\r\nexport default DataFetcher;\r\n","import React, { Component } from \"react\";\r\nimport DataFetcher from \"./DataFetcher\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\nexport default class GetCity extends Component {\r\n  City = [];\r\n\r\n  CitiesGetter = (props) => {\r\n    console.log(props);\r\n    this.City = props;\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Col md={6} className=\"mt-2\">\r\n        <DataFetcher\r\n          Data={this.CitiesGetter}\r\n          url={\"http://15.235.141.168:70/util/get-city\"}\r\n        />\r\n        <Form.Label>\r\n          <h5>{t(\"City\")} </h5>\r\n        </Form.Label>\r\n\r\n        <InputGroup>\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            onChange={(e) => {\r\n              const returnid = e.target.value;\r\n              this.props.Data(returnid);\r\n              console.log(this.City);\r\n            }}\r\n            required\r\n          >\r\n            <option selected>{t(\"City\")}</option>\r\n\r\n            {this.City.map((n) => {\r\n              return <option value={n.id}>{n.name}</option>;\r\n            })}\r\n          </select>\r\n        </InputGroup>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DataFetcher from \"./DataFetcher\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\nexport default class GetCountry extends Component {\r\n  Country = [];\r\n\r\n  CountriesGetter = (props) => {\r\n    console.log(props);\r\n    this.Country = props;\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Col md={6} className=\"mt-2\">\r\n        <DataFetcher\r\n          Data={this.CountriesGetter}\r\n          url={\"http://15.235.141.168:70/util/get-country\"}\r\n        />\r\n        <Form.Label>\r\n          <h5>{t(\"Country\")} </h5>\r\n        </Form.Label>\r\n\r\n        <InputGroup>\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            onChange={(e) => {\r\n              const returnid = e.target.value;\r\n              this.props.Data(returnid);\r\n              console.log(this.Country);\r\n            }}\r\n            required\r\n          >\r\n            <option selected>{t(\"Country\")}</option>\r\n\r\n            {this.Country.map((n) => {\r\n              return <option value={n.id}>{n.country}</option>;\r\n            })}\r\n          </select>\r\n        </InputGroup>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}