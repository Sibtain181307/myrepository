{"version":3,"sources":["app/views/shipment/create-shipment/C2C.jsx","app/views/shipment/ShipmentComponents/GetLocations.jsx"],"names":["C2C","newusercheckreceiver","differentContactCheckreciver","CustomerCheckreceiver","CLDLCheckreceiver","DifferentLocationCheckreceiver","locationReceiverCheck","newuserchecksender","differentContactChecksender","CustomerChecksender","CLDLChecksender","DifferentLocationChecksender","locationSenderCheck","loadShipmentCheck","orderBaseDto","c2COdrDto","delivery","contactDto","countryCode","networkCode","number","numberType","isCLDL","isContactDifferentForLocation","isLocationByID","locationDto","address","_long","cityId","geoLink","lang","streetAddress","addressId","contact","contactId","isAddressById","isContactById","statusId","title","type","locationId","pickup","receiver","custDetailDto","resource","dateOfBirth","firstName","gender","lastName","middleName","nic","nicAttachment","attachmentType","description","filePath","fileType","custId","isByID","sender","shipmentContentDtoList","GetShipmentDetails","props","push","console","log","forceUpdate","handleCreateShipment","GetContactReceiver","axios","get","headers","SessionKey","Number","then","res","data","id","GetChecksDelivery","isNewDeliveryLocationContact","isDeliveryLocationDiffernet","DifferentLocationCheck","loadShipmentcheck","GetDifferentContactDelivery","GetLocationDelivery","GetCustomerReceiver","GetCustomerSender","GetContactSender","GetChecksPickup","GetDifferentContactPickup","GetLocationPickup","post","Event","status","Error","this","catch","err","GetLocationSender","GetLocationReceiver","Data","t","Body","Component","GetLocations","Locations","LocationsGetter","Setid","JSON","parse","localStorage","user","typeId","md","className","url","event","idsetter","Label","aria-label","onChange","e","returnid","parseInt","target","value","required","selected","map","n"],"mappings":"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","file":"static/js/124.6613a0a7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport GetWarehouseName from \"../ShipmentComponents/GetWarehouse\";\r\nimport Address from \"app/views/User/UserComponents/Address\";\r\nimport { default as t } from \"../../../../translations\";\r\nimport Customer from \"./../ShipmentComponents/Customer\";\r\nimport Contact from \"../ShipmentComponents/Contact\";\r\nimport ShipmentContent from \"./../ShipmentComponents/ShipmentContent\";\r\nimport Checks from \"../ShipmentComponents/Checks\";\r\nimport GetLocations from \"../ShipmentComponents/GetLocations\";\r\nimport Number from \"../ShipmentComponents/Number\";\r\nimport Location from \"../ShipmentComponents/Location\";\r\nexport default class C2C extends Component {\r\n  //Receiver Checks\r\n\r\n  newusercheckreceiver = false;\r\n  differentContactCheckreciver = false;\r\n  CustomerCheckreceiver = false;\r\n  CLDLCheckreceiver = false;\r\n  DifferentLocationCheckreceiver = false;\r\n  locationReceiverCheck = false;\r\n\r\n  //Sender Checks\r\n\r\n  newuserchecksender = false;\r\n  differentContactChecksender = false;\r\n  CustomerChecksender = false;\r\n  CLDLChecksender = false;\r\n  DifferentLocationChecksender = false;\r\n  locationSenderCheck = false;\r\n\r\n  //Shipment check\r\n\r\n  loadShipmentCheck = false;\r\n\r\n  //Data to send\r\n  orderBaseDto = {\r\n    c2COdrDto: {\r\n      delivery: {\r\n        contactDto: {\r\n          countryCode: \"\",\r\n          networkCode: 0,\r\n          number: 0,\r\n          numberType: \"\",\r\n        },\r\n        isCLDL: false,\r\n        isContactDifferentForLocation: false,\r\n        isLocationByID: false,\r\n        locationDto: {\r\n          address: {\r\n            _long: 0,\r\n            cityId: 0,\r\n            geoLink: \"\",\r\n            lang: 0,\r\n            streetAddress: \"\",\r\n          },\r\n          addressId: 0,\r\n          contact: {\r\n            countryCode: \"\",\r\n            networkCode: 0,\r\n            number: 0,\r\n            numberType: \"\",\r\n          },\r\n          contactId: 0,\r\n          isAddressById: false,\r\n          isContactById: false,\r\n          statusId: 0,\r\n          title: \"\",\r\n          type: \"\",\r\n        },\r\n        locationId: 0,\r\n      },\r\n      pickup: {\r\n        contactDto: {\r\n          countryCode: \"\",\r\n          networkCode: 0,\r\n          number: 0,\r\n          numberType: \"\",\r\n        },\r\n        isCLDL: false,\r\n        isContactDifferentForLocation: false,\r\n        isLocationByID: false,\r\n        locationDto: {\r\n          address: {\r\n            _long: 0,\r\n            cityId: 0,\r\n            geoLink: \"\",\r\n            lang: 0,\r\n            streetAddress: \"\",\r\n          },\r\n          addressId: 0,\r\n          contact: {\r\n            countryCode: \"\",\r\n            networkCode: 0,\r\n            number: 0,\r\n            numberType: \"\",\r\n          },\r\n          contactId: 0,\r\n          isAddressById: false,\r\n          isContactById: false,\r\n          statusId: 0,\r\n          title: \"\",\r\n          type: \"\",\r\n        },\r\n        locationId: 0,\r\n      },\r\n      receiver: {\r\n        custDetailDto: {\r\n          resource: {\r\n            address: {\r\n              _long: 0,\r\n              cityId: 0,\r\n              geoLink: \"\",\r\n              lang: 0,\r\n              streetAddress: \"\",\r\n            },\r\n            contact: {\r\n              countryCode: \"\",\r\n              networkCode: 0,\r\n              number: 0,\r\n              numberType: \"\",\r\n            },\r\n            dateOfBirth: \"\",\r\n            firstName: \"\",\r\n            gender: \"\",\r\n            lastName: \"\",\r\n            middleName: \"\",\r\n            nic: \"\",\r\n            nicAttachment: {\r\n              attachmentType: \"\",\r\n              description: \"\",\r\n              filePath: \"\",\r\n              fileType: \"\",\r\n            },\r\n          },\r\n        },\r\n        custId: 0,\r\n        isByID: false,\r\n      },\r\n      sender: {\r\n        custDetailDto: {\r\n          resource: {\r\n            address: {\r\n              _long: 0,\r\n              cityId: 0,\r\n              geoLink: \"\",\r\n              lang: 0,\r\n              streetAddress: \"\",\r\n            },\r\n            contact: {\r\n              countryCode: \"\",\r\n              networkCode: 0,\r\n              number: 0,\r\n              numberType: \"\",\r\n            },\r\n            dateOfBirth: \"\",\r\n            firstName: \"\",\r\n            gender: \"\",\r\n            lastName: \"\",\r\n            middleName: \"\",\r\n            nic: \"\",\r\n            nicAttachment: {\r\n              attachmentType: \"\",\r\n              description: \"\",\r\n              filePath: \"\",\r\n              fileType: \"\",\r\n            },\r\n          },\r\n        },\r\n        custId: 0,\r\n        isByID: false,\r\n      },\r\n    },\r\n    shipmentContentDtoList: [],\r\n    type: 3,\r\n  };\r\n\r\n  //Get Functions Receiver\r\n  GetShipmentDetails = (props) => {\r\n    this.orderBaseDto.shipmentContentDtoList.push(props);\r\n    console.log(this.orderBaseDto.shipmentContentDtoList);\r\n    this.forceUpdate();\r\n    this.handleCreateShipment();\r\n  };\r\n\r\n  GetContactReceiver = (props) => {\r\n    axios\r\n      .get(\"http://15.235.141.168:70/cust/get-cust-by-number\", {\r\n        headers: {\r\n          SessionKey: \"123\",\r\n          Number: props,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(this.orderBaseDto.c2COdrDto.receiver);\r\n        console.log(props);\r\n        if (res.data.data !== null) {\r\n          console.log(\"if is executed\");\r\n          this.orderBaseDto.c2COdrDto.receiver.isByID = true;\r\n          this.orderBaseDto.c2COdrDto.receiver.custId = res.data.data.id;\r\n          this.orderBaseDto.c2COdrDto.receiver.custDetailDto = null;\r\n          console.log(this.orderBaseDto);\r\n          this.forceUpdate();\r\n        } else {\r\n          console.log(\"else is executed\");\r\n          this.newusercheckreceiver = true;\r\n          this.forceUpdate();\r\n        }\r\n      });\r\n  };\r\n  GetChecksDelivery = (props) => {\r\n    this.orderBaseDto.c2COdrDto.delivery.isContactDifferentForLocation =\r\n      props.isNewDeliveryLocationContact;\r\n    this.DifferentLocationCheckreceiver = props.isDeliveryLocationDiffernet;\r\n    this.orderBaseDto.c2COdrDto.delivery.isCLDL =\r\n      props.isDeliveryLocationDiffernet;\r\n    console.log(this.orderBaseDto.c2COdrDto.pickup);\r\n    if (\r\n      this.orderBaseDto.c2COdrDto.delivery.isContactDifferentForLocation ===\r\n      true\r\n    ) {\r\n      this.differentContactCheckreciver = true;\r\n      this.forceUpdate();\r\n    } else {\r\n      this.orderBaseDto.c2COdrDto.delivery.contactDto = null;\r\n    }\r\n    if (this.DifferentLocationCheck !== true) {\r\n      //  this.orderBaseDto.c2COdrDto.delivery.isCLDL = true;\r\n      this.orderBaseDto.c2COdrDto.delivery.isLocationByID = true;\r\n      this.orderBaseDto.c2COdrDto.delivery.locationDto = null;\r\n      this.forceUpdate();\r\n    } else {\r\n      this.orderBaseDto.c2COdrDto.delivery.isCLDL = false;\r\n      this.orderBaseDto.c2COdrDto.delivery.isLocationByID = false;\r\n    }\r\n    if (\r\n      this.differentContactCheckreciver === false &&\r\n      this.DifferentLocationCheckreceiver === false\r\n    ) {\r\n      this.loadShipmentcheck = true;\r\n      this.locationReceiverCheck = true;\r\n    }\r\n    if (this.newuserchecksender === true) {\r\n      this.orderBaseDto.c2COdrDto.delivery.isCLDL = true;\r\n      this.orderBaseDto.c2COdrDto.delivery.isLocationByID = false;\r\n    }\r\n    this.forceUpdate();\r\n  };\r\n\r\n  GetDifferentContactDelivery = (props) => {\r\n    this.orderBaseDto.c2COdrDto.delivery.contactDto = props;\r\n  };\r\n  GetLocationDelivery = (props) => {\r\n    this.orderBaseDto.c2COdrDto.delivery.locationDto = props;\r\n  };\r\n  GetCustomerReceiver = (props) => {\r\n    console.log(props);\r\n    this.orderBaseDto.c2COdrDto.receiver.custDetailDto = props.resource;\r\n    console.log(this.orderBaseDto);\r\n    if (props !== null) {\r\n      this.CustomerCheckreceiver = true;\r\n    }\r\n    this.forceUpdate();\r\n  };\r\n  //Sender Functions\r\n\r\n  GetCustomerSender = (props) => {\r\n    console.log(props);\r\n    this.orderBaseDto.c2COdrDto.sender.custDetailDto = props.resource;\r\n    console.log(this.orderBaseDto);\r\n    if (props !== null) {\r\n      this.CustomerChecksender = true;\r\n    }\r\n    this.forceUpdate();\r\n  };\r\n\r\n  GetContactSender = (props) => {\r\n    axios\r\n      .get(\"http://15.235.141.168:70/cust/get-cust-by-number\", {\r\n        headers: {\r\n          SessionKey: \"123\",\r\n          Number: props,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(this.orderBaseDto.c2COdrDto.sender);\r\n        console.log(props);\r\n        if (res.data.data !== null) {\r\n          console.log(\"if is executed\");\r\n          this.orderBaseDto.c2COdrDto.sender.isByID = true;\r\n          this.orderBaseDto.c2COdrDto.sender.custId = res.data.data.id;\r\n          this.orderBaseDto.c2COdrDto.sender.custDetailDto = null;\r\n          console.log(this.orderBaseDto);\r\n          this.forceUpdate();\r\n        } else {\r\n          console.log(\"else is executed\");\r\n          this.newuserchecksender = true;\r\n          this.forceUpdate();\r\n        }\r\n      });\r\n  };\r\n  GetChecksPickup = (props) => {\r\n    this.orderBaseDto.c2COdrDto.pickup.isContactDifferentForLocation =\r\n      props.isNewDeliveryLocationContact;\r\n    this.DifferentLocationChecksender = props.isDeliveryLocationDiffernet;\r\n    this.orderBaseDto.c2COdrDto.pickup.isCLDL =\r\n      props.isDeliveryLocationDiffernet;\r\n    console.log(this.orderBaseDto.c2COdrDto.pickup);\r\n    if (\r\n      this.orderBaseDto.c2COdrDto.pickup.isContactDifferentForLocation === true\r\n    ) {\r\n      this.differentContactChecksender = true;\r\n      this.forceUpdate();\r\n    } else {\r\n      this.orderBaseDto.c2COdrDto.pickup.contactDto = null;\r\n    }\r\n    if (this.DifferentLocationChecksender !== true) {\r\n      // this.orderBaseDto.c2COdrDto.pickup.isCLDL = true;\r\n      this.orderBaseDto.c2COdrDto.pickup.isLocationByID = true;\r\n      this.orderBaseDto.c2COdrDto.pickup.locationDto = null;\r\n      this.forceUpdate();\r\n    } else {\r\n      this.orderBaseDto.c2COdrDto.pickup.isCLDL = false;\r\n      this.orderBaseDto.c2COdrDto.pickup.isLocationByID = false;\r\n    }\r\n    if (\r\n      this.differentContactChecksender === false &&\r\n      this.DifferentLocationChecksender === false\r\n    ) {\r\n      this.loadShipmentcheck = true;\r\n      this.locationSenderCheck = true;\r\n    }\r\n    if (this.newuserchecksender === true) {\r\n      this.orderBaseDto.c2COdrDto.pickup.isCLDL = true;\r\n      this.orderBaseDto.c2COdrDto.pickup.isLocationByID = false;\r\n    }\r\n    this.forceUpdate();\r\n  };\r\n\r\n  GetDifferentContactPickup = (props) => {\r\n    this.orderBaseDto.c2COdrDto.pickup.contactDto = props;\r\n  };\r\n  GetLocationPickup = (props) => {\r\n    this.orderBaseDto.c2COdrDto.pickup.locationDto = props;\r\n  };\r\n\r\n  handleCreateShipment = () => {\r\n    axios\r\n      .post(\"http://15.235.141.168:70/order/create\", this.orderBaseDto, {\r\n        headers: {\r\n          SessionKey: \"123\",\r\n          Event: \"Create-Cargo-Shipment\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          return res.data.data;\r\n        } else {\r\n          throw new Error(res.this.orderBaseDto);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  };\r\n\r\n  //SenderLocationId\r\n\r\n  GetLocationSender = (props) => {\r\n    this.orderBaseDto.c2COdrDto.pickup.locationId = props;\r\n  };\r\n\r\n  //ReceiverLocationId\r\n\r\n  GetLocationReceiver = (props) => {\r\n    this.orderBaseDto.c2COdrDto.delivery.locationId = props;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Number\r\n            Data={this.GetContactReceiver}\r\n            title={t(\"Add Receiver's Contact\")}\r\n          />\r\n          <Number\r\n            Data={this.GetContactSender}\r\n            title={t(\"Add Sender's Contact\")}\r\n          />\r\n          {this.newusercheckreceiver === true ? (\r\n            <Customer\r\n              Data={this.GetCustomerReceiver}\r\n              title={t(\"Add Receiver\")}\r\n            />\r\n          ) : null}\r\n          {this.newuserchecksender === true ? (\r\n            <Customer Data={this.GetCustomerSender} title={t(\"Add Sender\")} />\r\n          ) : null}\r\n          {this.orderBaseDto.c2COdrDto.receiver.isByID === true ? (\r\n            <Checks Data={this.GetChecksPickup} title={t(\"Pickup Checks\")} />\r\n          ) : null}\r\n          {this.orderBaseDto.c2COdrDto.sender.isByID === true ? (\r\n            <Checks\r\n              Data={this.GetChecksDelivery}\r\n              title={t(\"Delivery Checks\")}\r\n            />\r\n          ) : null}\r\n          {this.DifferentLocationCheckreceiver === true ? (\r\n            <Location\r\n              Data={this.GetLocationPickup}\r\n              title={t(\"Sender's Locations\")}\r\n            />\r\n          ) : null}\r\n          {this.DifferentLocationChecksender === true ? (\r\n            <Location\r\n              Data={this.GetLocationDelivery}\r\n              title={t(\"Receiver's Locations\")}\r\n            />\r\n          ) : null}\r\n\r\n          {this.differentContactChecksender === true ? (\r\n            <Contact\r\n              Data={this.GetDifferentContactPickup}\r\n              title={t(\"Sender's Different Contact\")}\r\n            />\r\n          ) : null}\r\n\r\n          {this.differentContactCheckreciver === true ? (\r\n            <Contact\r\n              Data={this.GetDifferentContactDelivery}\r\n              title={t(\"Receiver's Difference Contact\")}\r\n            />\r\n          ) : null}\r\n          {this.locationSenderCheck === true ? (\r\n            <Card>\r\n              <Card.Body>\r\n                <GetLocations\r\n                  Data={this.GetLocationSender}\r\n                  title={t(\"Locations Sender\")}\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n          ) : null}\r\n          {this.locationReceiverCheck === true ? (\r\n            <Card>\r\n              <Card.Body>\r\n                <GetLocations\r\n                  Data={this.GetLocationReceiver}\r\n                  title={t(\"Locations Receiver\")}\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n          ) : null}\r\n          {this.CustomerChecksender === true ||\r\n          this.DifferentLocationChecksender === true ||\r\n          this.differentContactChecksender === true ||\r\n          this.locationReceiverCheck === true ||\r\n          this.locationSenderCheck === true ? (\r\n            <ShipmentContent Data={this.GetShipmentDetails} />\r\n          ) : null}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DataFetcher from \"app/views/User/UserComponents/DataFetcher\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport { default as t } from \"../../../../translations\";\r\nexport default class GetLocations extends Component {\r\n  Locations = [];\r\n  LocationsGetter = (props) => {\r\n    console.log(props);\r\n    this.Locations = props;\r\n    this.forceUpdate();\r\n    console.log(this.Locations);\r\n  };\r\n  Setid = () => {\r\n    const user = JSON.parse(localStorage.user);\r\n    const id = user.typeId;\r\n    console.log(id);\r\n    return id;\r\n  };\r\n  render() {\r\n    return (\r\n      <Col md={6} className=\"mt-2\">\r\n        <DataFetcher\r\n          Data={this.LocationsGetter}\r\n          url={\"http://15.235.141.168:70/location/get-location-by-cust\"}\r\n          event={\"Get-LastMile\"}\r\n          idsetter={this.Setid()}\r\n        />\r\n        {console.log(this.id)}\r\n        <Form.Label>\r\n          <h5>{this.props.title} </h5>\r\n        </Form.Label>\r\n\r\n        <InputGroup>\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n            onChange={(e) => {\r\n              const returnid = parseInt(e.target.value, 10);\r\n              this.props.Data(returnid);\r\n              console.log(this.Locations);\r\n            }}\r\n            required\r\n          >\r\n            <option selected>{t(\"Locations\")}</option>\r\n\r\n            {this.Locations.map((n) => {\r\n              return <option value={n.id}>{n.title}</option>;\r\n            })}\r\n          </select>\r\n        </InputGroup>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}