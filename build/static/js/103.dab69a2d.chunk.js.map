{"version":3,"sources":["app/views/Locations/Hub-crew/view-staff/AddStaff.jsx","../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js"],"names":["AddStaff","t","className","md","Label","Control","placeholder","type","variant","alignDirection","PropTypes","oneOf","alignPropType","oneOfType","shape","sm","lg","xl","xxl","propTypes","id","string","href","onClick","func","title","node","isRequired","disabled","bool","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","bsPrefix","size","DropdownButton","React","ref","children","props","_jsxs","Dropdown","_jsx","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName"],"mappings":"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","file":"static/js/103.dab69a2d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  InputGroup,\r\n  Row,\r\n  Col,\r\n  DropdownButton,\r\n} from \"react-bootstrap\";\r\n\r\nimport DropdownItem from \"react-bootstrap/esm/DropdownItem\";\r\n\r\nimport { default as t } from \"../../../../../translations\";\r\n\r\nconst AddStaff = () => {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col>\r\n          <h2>\r\n            {t(\"viewStaff\")} / {t(\"addNew\")}\r\n          </h2>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mt-2\">\r\n        <Form>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Form.Label>{t(\"firstName\")}</Form.Label>\r\n              <Form.Control placeholder=\"--enter first name--\" />\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Label>{t(\"lastName\")}</Form.Label>\r\n              <Form.Control placeholder=\"--enter last name--\" />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6}>\r\n              <Form.Label>{t(\"streetAddress\")}</Form.Label>\r\n              <Form.Control placeholder=\"--enter street address--\" />\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Label>{t(\"city\")}</Form.Label>\r\n              <InputGroup>\r\n                <Form.Control placeholder=\"--select city--\" />\r\n                <DropdownButton>\r\n                  <DropdownItem>Item1</DropdownItem>\r\n                </DropdownButton>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6}>\r\n              <Form.Label>{t(\"country\")}</Form.Label>\r\n              <InputGroup>\r\n                <Form.Control placeholder=\"--select country--\" />\r\n                <DropdownButton>\r\n                  <DropdownItem>Item1</DropdownItem>\r\n                </DropdownButton>\r\n              </InputGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Label>{t(\"postalCode\")}</Form.Label>\r\n              <Form.Control placeholder=\"--enter postal code--\" />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6}>\r\n              <Form.Label>{t(\"selectDesignation\")}</Form.Label>\r\n              <InputGroup>\r\n                <Form.Control placeholder=\"--select designation--\" />\r\n                <DropdownButton>\r\n                  <DropdownItem>Item1</DropdownItem>\r\n                </DropdownButton>\r\n              </InputGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Label>{t(\"selectWarehouse\")}</Form.Label>\r\n              <InputGroup>\r\n                <Form.Control placeholder=\"--select warehouse--\" />\r\n                <DropdownButton>\r\n                  <DropdownItem>Item1</DropdownItem>\r\n                </DropdownButton>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6}>\r\n              <Form.Label>NIC/ Iqama/ {t(\"passportNumber\")}</Form.Label>\r\n              <Form.Control />\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Label>NIC/ Iqama/ {t(\"passportAttachment\")}</Form.Label>\r\n              <Form.Control type=\"file\" />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6}>\r\n              <Form.Label>{t(\"contractId\")}</Form.Label>\r\n              <Form.Control />\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Label>{t(\"contractAttachment\")}</Form.Label>\r\n              <Form.Control type=\"file\" />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6}>\r\n              <Form.Label>{t(\"salaryInSar\")}</Form.Label>\r\n              <Form.Control placeholder=\"--Enter Salary amount in SAR--\" />\r\n            </Col>\r\n\r\n            <Col md={6}>\r\n              <Form.Label>{t(\"contractTenureInMonths\")}</Form.Label>\r\n              <InputGroup>\r\n                <Button>-12</Button>\r\n                <Button>-6</Button>\r\n                <Button>-</Button>\r\n                <Form.Control type=\"number\" />\r\n                <Button>+</Button>\r\n                <Button>+6</Button>\r\n                <Button>+12</Button>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6}>\r\n              <Form.Label>{t(\"employmentStatus\")}</Form.Label>\r\n              <Form.Control placeholder=\"--Select Employement status--\" />\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Label>\r\n                {t(\"employer\")} ({t(\"ifVendor\")})\r\n              </Form.Label>\r\n              <Form.Control />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"mt-2 \">\r\n            <Col className=\"d-flex justify-content-end\">\r\n              <Button className=\"mx-2\" variant=\"danger\">\r\n                {t(\"discard\")}\r\n              </Button>{\" \"}\r\n              <Button className=\"mx-2\" variant=\"success\">\r\n                {t(\"create\")}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStaff;\r\n","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n})]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;"],"sourceRoot":""}